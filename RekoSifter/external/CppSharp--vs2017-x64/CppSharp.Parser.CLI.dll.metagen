ImageRuntimeVersion: v4.0.30319
Assembly CppSharp.Parser.CLI, Version=0.0.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Interface ICppInstance: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    IntPtr __Instance 'get set' : 
  Methods:
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class CppSharp.Parser.AST.NativeLibrary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.NativeLibrary): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.NativeLibrary*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.NativeLibrary*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 DependenciesCount 'get ' : 
    UInt32 SymbolsCount 'get ' : 
    System.Collections.Generic.List`1[System.String] Dependencies 'get set' : 
    System.Collections.Generic.List`1[System.String] Symbols 'get set' : 
    CppSharp.Parser.AST.ArchType ArchType 'get set' : 
    System.String FileName 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.NativeLibrary* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(NativeLibrary*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ArchType(): PrivateScope, Public, HideBySig, SpecialName
    set_ArchType(ArchType): PrivateScope, Public, HideBySig, SpecialName
    get_Symbols(): PrivateScope, Public, HideBySig, SpecialName
    set_Symbols(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Dependencies(): PrivateScope, Public, HideBySig, SpecialName
    set_Dependencies(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_SymbolsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_DependenciesCount(): PrivateScope, Public, HideBySig, SpecialName
    GetSymbols(UInt32): PrivateScope, Public, HideBySig
    AddSymbols(String): PrivateScope, Public, HideBySig
    ClearSymbols(): PrivateScope, Public, HideBySig
    GetDependencies(UInt32): PrivateScope, Public, HideBySig
    AddDependencies(String): PrivateScope, Public, HideBySig
    ClearDependencies(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.Comment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.Comment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.CommentKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Comment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Comment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.AST.CommentKind Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.Comment* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Comment*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(CommentKind): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(CommentKind): PrivateScope, Public, Static, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.BlockContentComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Comment
    Void .ctor(CppSharp.Parser.AST.BlockContentComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.CommentKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BlockContentComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BlockContentComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    op_Implicit(CommentKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.FullComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Comment
    Void .ctor(CppSharp.Parser.AST.FullComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FullComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FullComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 BlocksCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.BlockContentComment] Blocks 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Blocks(): PrivateScope, Public, HideBySig, SpecialName
    set_Blocks(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_BlocksCount(): PrivateScope, Public, HideBySig, SpecialName
    GetBlocks(UInt32): PrivateScope, Public, HideBySig
    AddBlocks(BlockContentComment): PrivateScope, Public, HideBySig
    ClearBlocks(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.InlineContentComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Comment
    Void .ctor(CppSharp.Parser.AST.InlineContentComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.CommentKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.InlineContentComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.InlineContentComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasTrailingNewline 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_HasTrailingNewline(): PrivateScope, Public, HideBySig, SpecialName
    set_HasTrailingNewline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(CommentKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.ParagraphComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.BlockContentComment
    Void .ctor(CppSharp.Parser.AST.ParagraphComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ParagraphComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ParagraphComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ContentCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.InlineContentComment] Content 'get set' : 
    Boolean IsWhitespace 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsWhitespace(): PrivateScope, Public, HideBySig, SpecialName
    set_IsWhitespace(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Content(): PrivateScope, Public, HideBySig, SpecialName
    set_Content(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_ContentCount(): PrivateScope, Public, HideBySig, SpecialName
    GetContent(UInt32): PrivateScope, Public, HideBySig
    AddContent(InlineContentComment): PrivateScope, Public, HideBySig
    ClearContent(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.BlockCommandComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.BlockContentComment
    Void .ctor(CppSharp.Parser.AST.BlockCommandComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.CommentKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BlockCommandComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BlockCommandComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.BlockCommandComment+Argument] Arguments 'get set' : 
    CppSharp.Parser.AST.ParagraphComment ParagraphComment 'get set' : 
    UInt32 CommandId 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_CommandId(): PrivateScope, Public, HideBySig, SpecialName
    set_CommandId(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ParagraphComment(): PrivateScope, Public, HideBySig, SpecialName
    set_ParagraphComment(ParagraphComment): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(Argument): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
    op_Implicit(CommentKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.BlockCommandComment+Argument: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Argument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Argument*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Argument*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    System.String Text 'get set' : 
    IntPtr __Instance 'get set' : 
    Argument* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Argument*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.ParamCommandComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.BlockCommandComment
    Void .ctor(CppSharp.Parser.AST.ParamCommandComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ParamCommandComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ParamCommandComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ParamIndex 'get set' : 
    PassDirection Direction 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    set_Direction(PassDirection): PrivateScope, Public, HideBySig, SpecialName
    get_ParamIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_ParamIndex(UInt32): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.ParamCommandComment+PassDirection: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    PassDirection In = 0 : Public, Static, Literal, HasDefault
    PassDirection Out = 1 : Public, Static, Literal, HasDefault
    PassDirection InOut = 2 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.TParamCommandComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.BlockCommandComment
    Void .ctor(CppSharp.Parser.AST.TParamCommandComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TParamCommandComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TParamCommandComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 PositionCount 'get ' : 
    System.Collections.Generic.List`1[System.UInt32] Position 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_PositionCount(): PrivateScope, Public, HideBySig, SpecialName
    GetPosition(UInt32): PrivateScope, Public, HideBySig
    AddPosition(UInt32&(In, Out)): PrivateScope, Public, HideBySig
    ClearPosition(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.VerbatimBlockLineComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Comment
    Void .ctor(CppSharp.Parser.AST.VerbatimBlockLineComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VerbatimBlockLineComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VerbatimBlockLineComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Text 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.VerbatimBlockComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.BlockCommandComment
    Void .ctor(CppSharp.Parser.AST.VerbatimBlockComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VerbatimBlockComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VerbatimBlockComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 LinesCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.VerbatimBlockLineComment] Lines 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Lines(): PrivateScope, Public, HideBySig, SpecialName
    set_Lines(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_LinesCount(): PrivateScope, Public, HideBySig, SpecialName
    GetLines(UInt32): PrivateScope, Public, HideBySig
    AddLines(VerbatimBlockLineComment): PrivateScope, Public, HideBySig
    ClearLines(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.VerbatimLineComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.BlockCommandComment
    Void .ctor(CppSharp.Parser.AST.VerbatimLineComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VerbatimLineComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VerbatimLineComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Text 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.InlineCommandComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.InlineContentComment
    Void .ctor(CppSharp.Parser.AST.InlineCommandComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.InlineCommandComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.InlineCommandComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.InlineCommandComment+Argument] Arguments 'get set' : 
    RenderKind CommentRenderKind 'get set' : 
    UInt32 CommandId 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_CommandId(): PrivateScope, Public, HideBySig, SpecialName
    set_CommandId(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_CommentRenderKind(): PrivateScope, Public, HideBySig, SpecialName
    set_CommentRenderKind(RenderKind): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(Argument): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
Struct CppSharp.Parser.AST.InlineCommandComment+RenderKind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RenderKind RenderNormal = 0 : Public, Static, Literal, HasDefault
    RenderKind RenderBold = 1 : Public, Static, Literal, HasDefault
    RenderKind RenderMonospaced = 2 : Public, Static, Literal, HasDefault
    RenderKind RenderEmphasized = 3 : Public, Static, Literal, HasDefault
    RenderKind RenderAnchor = 4 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.InlineCommandComment+Argument: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Argument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Argument*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Argument*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    System.String Text 'get set' : 
    IntPtr __Instance 'get set' : 
    Argument* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Argument*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.HTMLTagComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.InlineContentComment
    Void .ctor(CppSharp.Parser.AST.HTMLTagComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.CommentKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.HTMLTagComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.HTMLTagComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    op_Implicit(CommentKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.HTMLStartTagComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.HTMLTagComment
    Void .ctor(CppSharp.Parser.AST.HTMLStartTagComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.HTMLStartTagComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.HTMLStartTagComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 AttributesCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.HTMLStartTagComment+Attribute] Attributes 'get set' : 
    System.String TagName 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TagName(): PrivateScope, Public, HideBySig, SpecialName
    set_TagName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    set_Attributes(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_AttributesCount(): PrivateScope, Public, HideBySig, SpecialName
    GetAttributes(UInt32): PrivateScope, Public, HideBySig
    AddAttributes(Attribute): PrivateScope, Public, HideBySig
    ClearAttributes(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.HTMLStartTagComment+Attribute: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Attribute): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Attribute*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Attribute*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    System.String Value 'get set' : 
    System.String Name 'get set' : 
    IntPtr __Instance 'get set' : 
    Attribute* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Attribute*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(String): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.HTMLEndTagComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.HTMLTagComment
    Void .ctor(CppSharp.Parser.AST.HTMLEndTagComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.HTMLEndTagComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.HTMLEndTagComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String TagName 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TagName(): PrivateScope, Public, HideBySig, SpecialName
    set_TagName(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TextComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.InlineContentComment
    Void .ctor(CppSharp.Parser.AST.TextComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TextComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TextComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Text 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.RawComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.RawComment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.RawComment*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.RawComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.AST.FullComment FullCommentBlock 'get set' : 
    System.String BriefText 'get set' : 
    System.String Text 'get set' : 
    CppSharp.Parser.AST.RawCommentKind Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.RawComment* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(RawComment*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(RawCommentKind): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_BriefText(): PrivateScope, Public, HideBySig, SpecialName
    set_BriefText(String): PrivateScope, Public, HideBySig, SpecialName
    get_FullCommentBlock(): PrivateScope, Public, HideBySig, SpecialName
    set_FullCommentBlock(FullComment): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct CppSharp.Parser.AST.RawCommentKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.RawCommentKind Invalid = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind OrdinaryBCPL = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind OrdinaryC = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind BCPLSlash = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind BCPLExcl = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind JavaDoc = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind Qt = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind Merged = 7 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.CommentKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CommentKind FullComment = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind BlockContentComment = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind BlockCommandComment = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind ParamCommandComment = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind TParamCommandComment = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind VerbatimBlockComment = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind VerbatimLineComment = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind ParagraphComment = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind HTMLTagComment = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind HTMLStartTagComment = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind HTMLEndTagComment = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind TextComment = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind InlineContentComment = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind InlineCommandComment = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CommentKind VerbatimBlockLineComment = 14 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.ArchType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.ArchType UnknownArch = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ArchType X86 = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ArchType X86_64 = 2 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.CppParserOptions: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.CppParserOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.CppParserOptions*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.CppParserOptions*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 SupportedStdTypesCount 'get ' : 
    UInt32 LibraryDirsCount 'get ' : 
    UInt32 UndefinesCount 'get ' : 
    UInt32 DefinesCount 'get ' : 
    UInt32 SystemIncludeDirsCount 'get ' : 
    UInt32 IncludeDirsCount 'get ' : 
    UInt32 SourceFilesCount 'get ' : 
    UInt32 ArgumentsCount 'get ' : 
    System.String ClangVersion 'get ' : 
    Boolean SkipFunctionBodies 'get set' : 
    Boolean SkipLayoutInfo 'get set' : 
    Boolean SkipPrivateDeclarations 'get set' : 
    Boolean UnityBuild 'get set' : 
    Boolean Verbose 'get set' : 
    Boolean MicrosoftMode 'get set' : 
    Boolean NoBuiltinIncludes 'get set' : 
    Boolean NoStandardIncludes 'get set' : 
    System.String TargetTriple 'get set' : 
    Int32 ToolSetToUse 'get set' : 
    CppSharp.Parser.AST.ASTContext ASTContext 'get set' : 
    System.Collections.Generic.List`1[System.String] SupportedStdTypes 'get set' : 
    System.Collections.Generic.List`1[System.String] LibraryDirs 'get set' : 
    System.Collections.Generic.List`1[System.String] Undefines 'get set' : 
    System.Collections.Generic.List`1[System.String] Defines 'get set' : 
    System.Collections.Generic.List`1[System.String] SystemIncludeDirs 'get set' : 
    System.Collections.Generic.List`1[System.String] IncludeDirs 'get set' : 
    System.Collections.Generic.List`1[System.String] SourceFiles 'get set' : 
    System.String LibraryFile 'get set' : 
    System.Collections.Generic.List`1[System.String] Arguments 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.CppParserOptions* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(CppParserOptions*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_LibraryFile(): PrivateScope, Public, HideBySig, SpecialName
    set_LibraryFile(String): PrivateScope, Public, HideBySig, SpecialName
    get_SourceFiles(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceFiles(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeDirs(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeDirs(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_SystemIncludeDirs(): PrivateScope, Public, HideBySig, SpecialName
    set_SystemIncludeDirs(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Defines(): PrivateScope, Public, HideBySig, SpecialName
    set_Defines(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Undefines(): PrivateScope, Public, HideBySig, SpecialName
    set_Undefines(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_LibraryDirs(): PrivateScope, Public, HideBySig, SpecialName
    set_LibraryDirs(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_SupportedStdTypes(): PrivateScope, Public, HideBySig, SpecialName
    set_SupportedStdTypes(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_ASTContext(): PrivateScope, Public, HideBySig, SpecialName
    set_ASTContext(ASTContext): PrivateScope, Public, HideBySig, SpecialName
    get_ToolSetToUse(): PrivateScope, Public, HideBySig, SpecialName
    set_ToolSetToUse(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TargetTriple(): PrivateScope, Public, HideBySig, SpecialName
    set_TargetTriple(String): PrivateScope, Public, HideBySig, SpecialName
    get_NoStandardIncludes(): PrivateScope, Public, HideBySig, SpecialName
    set_NoStandardIncludes(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NoBuiltinIncludes(): PrivateScope, Public, HideBySig, SpecialName
    set_NoBuiltinIncludes(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MicrosoftMode(): PrivateScope, Public, HideBySig, SpecialName
    set_MicrosoftMode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Verbose(): PrivateScope, Public, HideBySig, SpecialName
    set_Verbose(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_UnityBuild(): PrivateScope, Public, HideBySig, SpecialName
    set_UnityBuild(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SkipPrivateDeclarations(): PrivateScope, Public, HideBySig, SpecialName
    set_SkipPrivateDeclarations(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SkipLayoutInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_SkipLayoutInfo(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SkipFunctionBodies(): PrivateScope, Public, HideBySig, SpecialName
    set_SkipFunctionBodies(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ClangVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceFilesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeDirsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_SystemIncludeDirsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_DefinesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_UndefinesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_LibraryDirsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportedStdTypesCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(String): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
    GetSourceFiles(UInt32): PrivateScope, Public, HideBySig
    AddSourceFiles(String): PrivateScope, Public, HideBySig
    ClearSourceFiles(): PrivateScope, Public, HideBySig
    GetIncludeDirs(UInt32): PrivateScope, Public, HideBySig
    AddIncludeDirs(String): PrivateScope, Public, HideBySig
    ClearIncludeDirs(): PrivateScope, Public, HideBySig
    GetSystemIncludeDirs(UInt32): PrivateScope, Public, HideBySig
    AddSystemIncludeDirs(String): PrivateScope, Public, HideBySig
    ClearSystemIncludeDirs(): PrivateScope, Public, HideBySig
    GetDefines(UInt32): PrivateScope, Public, HideBySig
    AddDefines(String): PrivateScope, Public, HideBySig
    ClearDefines(): PrivateScope, Public, HideBySig
    GetUndefines(UInt32): PrivateScope, Public, HideBySig
    AddUndefines(String): PrivateScope, Public, HideBySig
    ClearUndefines(): PrivateScope, Public, HideBySig
    GetLibraryDirs(UInt32): PrivateScope, Public, HideBySig
    AddLibraryDirs(String): PrivateScope, Public, HideBySig
    ClearLibraryDirs(): PrivateScope, Public, HideBySig
    GetSupportedStdTypes(UInt32): PrivateScope, Public, HideBySig
    AddSupportedStdTypes(String): PrivateScope, Public, HideBySig
    ClearSupportedStdTypes(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.ParserDiagnostic: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.ParserDiagnostic): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ParserDiagnostic*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ParserDiagnostic*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    Int32 ColumnNumber 'get set' : 
    Int32 LineNumber 'get set' : 
    CppSharp.Parser.ParserDiagnosticLevel Level 'get set' : 
    System.String Message 'get set' : 
    System.String FileName 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.ParserDiagnostic* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ParserDiagnostic*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    set_Message(String): PrivateScope, Public, HideBySig, SpecialName
    get_Level(): PrivateScope, Public, HideBySig, SpecialName
    set_Level(ParserDiagnosticLevel): PrivateScope, Public, HideBySig, SpecialName
    get_LineNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_LineNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.ParserResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.ParserResult): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ParserResult*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ParserResult*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 DiagnosticsCount 'get ' : 
    CppSharp.Parser.ParserTargetInfo TargetInfo 'get set' : 
    CppSharp.Parser.AST.NativeLibrary Library 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.ParserDiagnostic] Diagnostics 'get set' : 
    CppSharp.Parser.ParserResultKind Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.ParserResult* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ParserResult*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(ParserResultKind): PrivateScope, Public, HideBySig, SpecialName
    get_Diagnostics(): PrivateScope, Public, HideBySig, SpecialName
    set_Diagnostics(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Library(): PrivateScope, Public, HideBySig, SpecialName
    set_Library(NativeLibrary): PrivateScope, Public, HideBySig, SpecialName
    get_TargetInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_TargetInfo(ParserTargetInfo): PrivateScope, Public, HideBySig, SpecialName
    get_DiagnosticsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetDiagnostics(UInt32): PrivateScope, Public, HideBySig
    AddDiagnostics(ParserDiagnostic): PrivateScope, Public, HideBySig
    ClearDiagnostics(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.ClangParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.ClangParser): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ClangParser*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ClangParser*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.ClangParser* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ClangParser*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    ParseHeader(CppParserOptions): PrivateScope, Public, Static, HideBySig
    ParseLibrary(CppParserOptions): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct CppSharp.Parser.SourceLocation: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.SourceLocation*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.SourceLocation*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ID  'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ID(): PrivateScope, Public, HideBySig, SpecialName
    set_ID(UInt32): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.SourceRange: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.SourceRange): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.SourceRange*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.SourceRange*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.SourceLocation EndLoc 'get set' : 
    CppSharp.Parser.SourceLocation BeginLoc 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.SourceRange* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(SourceRange*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_BeginLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_EndLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_EndLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.Declaration: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.Declaration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.DeclarationKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Declaration*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Declaration*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 RedeclarationsCount 'get ' : 
    UInt32 PreprocessedEntitiesCount 'get ' : 
    CppSharp.Parser.AST.RawComment Comment 'get set' : 
    IntPtr OriginalPtr 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Declaration] Redeclarations 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.PreprocessedEntity] PreprocessedEntities 'get set' : 
    UInt32 DefinitionOrder 'get set' : 
    CppSharp.Parser.AST.Declaration CompleteDeclaration 'get set' : 
    Boolean IsDeprecated 'get set' : 
    Boolean IsInvalid 'get set' : 
    Boolean IsImplicit 'get set' : 
    Boolean IsDependent 'get set' : 
    Boolean IsIncomplete 'get set' : 
    System.String DebugText 'get set' : 
    System.String USR 'get set' : 
    System.String Name 'get set' : 
    Int32 LineNumberEnd 'get set' : 
    Int32 LineNumberStart 'get set' : 
    CppSharp.Parser.SourceLocation Location 'get set' : 
    CppSharp.Parser.AST.DeclarationContext Namespace 'get set' : 
    CppSharp.Parser.AST.AccessSpecifier Access 'get set' : 
    Int32 MaxFieldAlignment 'get set' : 
    CppSharp.Parser.AST.DeclarationKind Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.Declaration* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Declaration*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(DeclarationKind): PrivateScope, Public, HideBySig, SpecialName
    get_MaxFieldAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxFieldAlignment(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Access(): PrivateScope, Public, HideBySig, SpecialName
    set_Access(AccessSpecifier): PrivateScope, Public, HideBySig, SpecialName
    get_Namespace(): PrivateScope, Public, HideBySig, SpecialName
    set_Namespace(DeclarationContext): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_LineNumberStart(): PrivateScope, Public, HideBySig, SpecialName
    set_LineNumberStart(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LineNumberEnd(): PrivateScope, Public, HideBySig, SpecialName
    set_LineNumberEnd(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_USR(): PrivateScope, Public, HideBySig, SpecialName
    set_USR(String): PrivateScope, Public, HideBySig, SpecialName
    get_DebugText(): PrivateScope, Public, HideBySig, SpecialName
    set_DebugText(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsIncomplete(): PrivateScope, Public, HideBySig, SpecialName
    set_IsIncomplete(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsDependent(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDependent(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsImplicit(): PrivateScope, Public, HideBySig, SpecialName
    set_IsImplicit(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsInvalid(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInvalid(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsDeprecated(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDeprecated(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CompleteDeclaration(): PrivateScope, Public, HideBySig, SpecialName
    set_CompleteDeclaration(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_DefinitionOrder(): PrivateScope, Public, HideBySig, SpecialName
    set_DefinitionOrder(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_PreprocessedEntities(): PrivateScope, Public, HideBySig, SpecialName
    set_PreprocessedEntities(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Redeclarations(): PrivateScope, Public, HideBySig, SpecialName
    set_Redeclarations(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalPtr(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginalPtr(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_Comment(): PrivateScope, Public, HideBySig, SpecialName
    set_Comment(RawComment): PrivateScope, Public, HideBySig, SpecialName
    get_PreprocessedEntitiesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_RedeclarationsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetPreprocessedEntities(UInt32): PrivateScope, Public, HideBySig
    AddPreprocessedEntities(PreprocessedEntity): PrivateScope, Public, HideBySig
    ClearPreprocessedEntities(): PrivateScope, Public, HideBySig
    GetRedeclarations(UInt32): PrivateScope, Public, HideBySig
    AddRedeclarations(Declaration): PrivateScope, Public, HideBySig
    ClearRedeclarations(): PrivateScope, Public, HideBySig
    op_Implicit(DeclarationKind): PrivateScope, Public, Static, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.DeclarationContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.DeclarationContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.DeclarationKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DeclarationContext*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DeclarationContext*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 FriendsCount 'get ' : 
    UInt32 VariablesCount 'get ' : 
    UInt32 TypeAliasesCount 'get ' : 
    UInt32 TypedefsCount 'get ' : 
    UInt32 TemplatesCount 'get ' : 
    UInt32 ClassesCount 'get ' : 
    UInt32 FunctionsCount 'get ' : 
    UInt32 EnumsCount 'get ' : 
    UInt32 NamespacesCount 'get ' : 
    Boolean IsAnonymous 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Friend] Friends 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Variable] Variables 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.TypeAlias] TypeAliases 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.TypedefDecl] Typedefs 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Template] Templates 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Class] Classes 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Function] Functions 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Enumeration] Enums 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Namespace] Namespaces 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Namespaces(): PrivateScope, Public, HideBySig, SpecialName
    set_Namespaces(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Enums(): PrivateScope, Public, HideBySig, SpecialName
    set_Enums(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Functions(): PrivateScope, Public, HideBySig, SpecialName
    set_Functions(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Classes(): PrivateScope, Public, HideBySig, SpecialName
    set_Classes(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Templates(): PrivateScope, Public, HideBySig, SpecialName
    set_Templates(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Typedefs(): PrivateScope, Public, HideBySig, SpecialName
    set_Typedefs(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_TypeAliases(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeAliases(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Variables(): PrivateScope, Public, HideBySig, SpecialName
    set_Variables(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Friends(): PrivateScope, Public, HideBySig, SpecialName
    set_Friends(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsAnonymous(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAnonymous(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NamespacesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_EnumsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_FunctionsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_ClassesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_TemplatesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_TypedefsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_TypeAliasesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_VariablesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_FriendsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetNamespaces(UInt32): PrivateScope, Public, HideBySig
    AddNamespaces(Namespace): PrivateScope, Public, HideBySig
    ClearNamespaces(): PrivateScope, Public, HideBySig
    GetEnums(UInt32): PrivateScope, Public, HideBySig
    AddEnums(Enumeration): PrivateScope, Public, HideBySig
    ClearEnums(): PrivateScope, Public, HideBySig
    GetFunctions(UInt32): PrivateScope, Public, HideBySig
    AddFunctions(Function): PrivateScope, Public, HideBySig
    ClearFunctions(): PrivateScope, Public, HideBySig
    GetClasses(UInt32): PrivateScope, Public, HideBySig
    AddClasses(Class): PrivateScope, Public, HideBySig
    ClearClasses(): PrivateScope, Public, HideBySig
    GetTemplates(UInt32): PrivateScope, Public, HideBySig
    AddTemplates(Template): PrivateScope, Public, HideBySig
    ClearTemplates(): PrivateScope, Public, HideBySig
    GetTypedefs(UInt32): PrivateScope, Public, HideBySig
    AddTypedefs(TypedefDecl): PrivateScope, Public, HideBySig
    ClearTypedefs(): PrivateScope, Public, HideBySig
    GetTypeAliases(UInt32): PrivateScope, Public, HideBySig
    AddTypeAliases(TypeAlias): PrivateScope, Public, HideBySig
    ClearTypeAliases(): PrivateScope, Public, HideBySig
    GetVariables(UInt32): PrivateScope, Public, HideBySig
    AddVariables(Variable): PrivateScope, Public, HideBySig
    ClearVariables(): PrivateScope, Public, HideBySig
    GetFriends(UInt32): PrivateScope, Public, HideBySig
    AddFriends(Friend): PrivateScope, Public, HideBySig
    ClearFriends(): PrivateScope, Public, HideBySig
    op_Implicit(DeclarationKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.TypedefNameDecl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.TypedefNameDecl): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.DeclarationKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypedefNameDecl*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypedefNameDecl*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(DeclarationKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.TypedefDecl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.TypedefNameDecl
    Void .ctor(CppSharp.Parser.AST.TypedefDecl): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypedefDecl*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypedefDecl*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.TypeAlias: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.TypedefNameDecl
    Void .ctor(CppSharp.Parser.AST.TypeAlias): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeAlias*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeAlias*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.TypeAliasTemplate DescribedAliasTemplate 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_DescribedAliasTemplate(): PrivateScope, Public, HideBySig, SpecialName
    set_DescribedAliasTemplate(TypeAliasTemplate): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Friend: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.Friend): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Friend*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Friend*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Declaration Declaration 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(Declaration): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.StatementObsolete: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.StatementObsolete): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, CppSharp.Parser.AST.StatementClassObsolete, CppSharp.Parser.AST.Declaration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.StatementObsolete*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.StatementObsolete*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    System.String String 'get set' : 
    CppSharp.Parser.AST.Declaration Decl 'get set' : 
    CppSharp.Parser.AST.StatementClassObsolete Class 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.StatementObsolete* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(StatementObsolete*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Class(): PrivateScope, Public, HideBySig, SpecialName
    set_Class(StatementClassObsolete): PrivateScope, Public, HideBySig, SpecialName
    get_Decl(): PrivateScope, Public, HideBySig, SpecialName
    set_Decl(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_String(): PrivateScope, Public, HideBySig, SpecialName
    set_String(String): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.ExpressionObsolete: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.StatementObsolete
    Void .ctor(CppSharp.Parser.AST.ExpressionObsolete): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, CppSharp.Parser.AST.StatementClassObsolete, CppSharp.Parser.AST.Declaration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ExpressionObsolete*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ExpressionObsolete*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.BinaryOperatorObsolete: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.ExpressionObsolete
    Void .ctor(CppSharp.Parser.AST.BinaryOperatorObsolete): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, CppSharp.Parser.AST.ExpressionObsolete, CppSharp.Parser.AST.ExpressionObsolete, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BinaryOperatorObsolete*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BinaryOperatorObsolete*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String OpcodeStr 'get set' : 
    CppSharp.Parser.AST.ExpressionObsolete RHS 'get set' : 
    CppSharp.Parser.AST.ExpressionObsolete LHS 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_LHS(): PrivateScope, Public, HideBySig, SpecialName
    set_LHS(ExpressionObsolete): PrivateScope, Public, HideBySig, SpecialName
    get_RHS(): PrivateScope, Public, HideBySig, SpecialName
    set_RHS(ExpressionObsolete): PrivateScope, Public, HideBySig, SpecialName
    get_OpcodeStr(): PrivateScope, Public, HideBySig, SpecialName
    set_OpcodeStr(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CallExprObsolete: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.ExpressionObsolete
    Void .ctor(CppSharp.Parser.AST.CallExprObsolete): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, CppSharp.Parser.AST.Declaration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CallExprObsolete*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CallExprObsolete*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.ExpressionObsolete] Arguments 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(ExpressionObsolete): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.CXXConstructExprObsolete: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.ExpressionObsolete
    Void .ctor(CppSharp.Parser.AST.CXXConstructExprObsolete): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, CppSharp.Parser.AST.Declaration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXConstructExprObsolete*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXConstructExprObsolete*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.ExpressionObsolete] Arguments 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(ExpressionObsolete): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.Parameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.Parameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Parameter*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Parameter*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr DefaultValue 'get set' : 
    CppSharp.Parser.AST.ExpressionObsolete DefaultArgument 'get set' : 
    UInt32 Index 'get set' : 
    Boolean HasDefaultValue 'get set' : 
    Boolean IsIndirect 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_IsIndirect(): PrivateScope, Public, HideBySig, SpecialName
    set_IsIndirect(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasDefaultValue(): PrivateScope, Public, HideBySig, SpecialName
    set_HasDefaultValue(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultArgument(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultArgument(ExpressionObsolete): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultValue(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultValue(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Function: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.DeclarationContext
    Void .ctor(CppSharp.Parser.AST.Function): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Function*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Function*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ParametersCount 'get ' : 
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
    CppSharp.Parser.AST.Function InstantiatedFrom 'get set' : 
    CppSharp.Parser.AST.FunctionTemplateSpecialization SpecializationInfo 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Parameter] Parameters 'get set' : 
    CppSharp.Parser.AST.CallingConvention CallingConvention 'get set' : 
    CppSharp.Parser.AST.Stmt BodyStmt 'get set' : 
    System.String Body 'get set' : 
    System.String Signature 'get set' : 
    System.String Mangled 'get set' : 
    CppSharp.Parser.AST.CXXOperatorKind OperatorKind 'get set' : 
    CppSharp.Parser.AST.FriendKind FriendKind 'get set' : 
    Boolean IsDefaulted 'get set' : 
    Boolean IsDeleted 'get set' : 
    Boolean IsPure 'get set' : 
    Boolean IsInline 'get set' : 
    Boolean IsVariadic 'get set' : 
    Boolean IsConstExpr 'get set' : 
    Boolean HasThisReturn 'get set' : 
    Boolean IsReturnIndirect 'get set' : 
    CppSharp.Parser.AST.QualifiedType ReturnType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ReturnType(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_IsReturnIndirect(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReturnIndirect(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasThisReturn(): PrivateScope, Public, HideBySig, SpecialName
    set_HasThisReturn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsConstExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConstExpr(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsVariadic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVariadic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsInline(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsPure(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPure(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsDeleted(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDeleted(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefaulted(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDefaulted(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FriendKind(): PrivateScope, Public, HideBySig, SpecialName
    set_FriendKind(FriendKind): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorKind(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorKind(CXXOperatorKind): PrivateScope, Public, HideBySig, SpecialName
    get_Mangled(): PrivateScope, Public, HideBySig, SpecialName
    set_Mangled(String): PrivateScope, Public, HideBySig, SpecialName
    get_Signature(): PrivateScope, Public, HideBySig, SpecialName
    set_Signature(String): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    set_Body(String): PrivateScope, Public, HideBySig, SpecialName
    get_BodyStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_BodyStmt(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_CallingConvention(): PrivateScope, Public, HideBySig, SpecialName
    set_CallingConvention(CallingConvention): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameters(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_SpecializationInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecializationInfo(FunctionTemplateSpecialization): PrivateScope, Public, HideBySig, SpecialName
    get_InstantiatedFrom(): PrivateScope, Public, HideBySig, SpecialName
    set_InstantiatedFrom(Function): PrivateScope, Public, HideBySig, SpecialName
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_ParametersCount(): PrivateScope, Public, HideBySig, SpecialName
    GetParameters(UInt32): PrivateScope, Public, HideBySig
    AddParameters(Parameter): PrivateScope, Public, HideBySig
    ClearParameters(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.Method: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Function
    Void .ctor(CppSharp.Parser.AST.Method): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Method*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Method*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 OverriddenMethodsCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Method] OverriddenMethods 'get set' : 
    CppSharp.Parser.AST.RefQualifierKind RefQualifier 'get set' : 
    CppSharp.Parser.AST.QualifiedType ConversionType 'get set' : 
    Boolean IsMoveConstructor 'get set' : 
    Boolean IsCopyConstructor 'get set' : 
    Boolean IsDefaultConstructor 'get set' : 
    CppSharp.Parser.AST.CXXMethodKind MethodKind 'get set' : 
    Boolean IsExplicit 'get set' : 
    Boolean IsConst 'get set' : 
    Boolean IsStatic 'get set' : 
    Boolean IsVirtual 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsVirtual(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVirtual(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsStatic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsStatic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsConst(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConst(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsExplicit(): PrivateScope, Public, HideBySig, SpecialName
    set_IsExplicit(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MethodKind(): PrivateScope, Public, HideBySig, SpecialName
    set_MethodKind(CXXMethodKind): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefaultConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDefaultConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsCopyConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCopyConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsMoveConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMoveConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ConversionType(): PrivateScope, Public, HideBySig, SpecialName
    set_ConversionType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_RefQualifier(): PrivateScope, Public, HideBySig, SpecialName
    set_RefQualifier(RefQualifierKind): PrivateScope, Public, HideBySig, SpecialName
    get_OverriddenMethods(): PrivateScope, Public, HideBySig, SpecialName
    set_OverriddenMethods(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_OverriddenMethodsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetOverriddenMethods(UInt32): PrivateScope, Public, HideBySig
    AddOverriddenMethods(Method): PrivateScope, Public, HideBySig
    ClearOverriddenMethods(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.Enumeration: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.DeclarationContext
    Void .ctor(CppSharp.Parser.AST.Enumeration): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Enumeration*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Enumeration*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ItemsCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Enumeration+Item] Items 'get set' : 
    CppSharp.Parser.AST.BuiltinType BuiltinType 'get set' : 
    CppSharp.Parser.AST.Type Type 'get set' : 
    EnumModifiers Modifiers 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Modifiers(): PrivateScope, Public, HideBySig, SpecialName
    set_Modifiers(EnumModifiers): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_BuiltinType(): PrivateScope, Public, HideBySig, SpecialName
    set_BuiltinType(BuiltinType): PrivateScope, Public, HideBySig, SpecialName
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
    set_Items(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_ItemsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetItems(UInt32): PrivateScope, Public, HideBySig
    AddItems(Item): PrivateScope, Public, HideBySig
    ClearItems(): PrivateScope, Public, HideBySig
    FindItemByName(String): PrivateScope, Public, HideBySig
Struct CppSharp.Parser.AST.Enumeration+EnumModifiers: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EnumModifiers Anonymous = 1 : Public, Static, Literal, HasDefault
    EnumModifiers Scoped = 2 : Public, Static, Literal, HasDefault
    EnumModifiers Flags = 4 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.Enumeration+Item: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(Item): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Item*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Item*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt64 Value 'get set' : 
    System.String Expression 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    set_Expression(String): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(UInt64): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Variable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.Variable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Variable*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Variable*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
    System.String Mangled 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Mangled(): PrivateScope, Public, HideBySig, SpecialName
    set_Mangled(String): PrivateScope, Public, HideBySig, SpecialName
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.BaseClassSpecifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.BaseClassSpecifier): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BaseClassSpecifier*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BaseClassSpecifier*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    Int32 Offset 'get set' : 
    CppSharp.Parser.AST.Type Type 'get set' : 
    Boolean IsVirtual 'get set' : 
    CppSharp.Parser.AST.AccessSpecifier Access 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.BaseClassSpecifier* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(BaseClassSpecifier*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Access(): PrivateScope, Public, HideBySig, SpecialName
    set_Access(AccessSpecifier): PrivateScope, Public, HideBySig, SpecialName
    get_IsVirtual(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVirtual(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Int32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.Field: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.Field): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Field*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Field*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 BitWidth 'get set' : 
    Boolean IsBitField 'get set' : 
    CppSharp.Parser.AST.Class Class 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Class(): PrivateScope, Public, HideBySig, SpecialName
    set_Class(Class): PrivateScope, Public, HideBySig, SpecialName
    get_IsBitField(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBitField(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BitWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_BitWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.AccessSpecifierDecl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.AccessSpecifierDecl): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AccessSpecifierDecl*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AccessSpecifierDecl*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.VTableComponent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.VTableComponent): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VTableComponent*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VTableComponent*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.AST.Declaration Declaration 'get set' : 
    UInt32 Offset 'get set' : 
    CppSharp.Parser.AST.VTableComponentKind Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.VTableComponent* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(VTableComponent*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(VTableComponentKind): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(Declaration): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.VTableLayout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.VTableLayout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VTableLayout*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VTableLayout*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 ComponentsCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.VTableComponent] Components 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.VTableLayout* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(VTableLayout*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Components(): PrivateScope, Public, HideBySig, SpecialName
    set_Components(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_ComponentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetComponents(UInt32): PrivateScope, Public, HideBySig
    AddComponents(VTableComponent): PrivateScope, Public, HideBySig
    ClearComponents(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.VFTableInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.VFTableInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VFTableInfo*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VFTableInfo*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.AST.VTableLayout Layout 'get set' : 
    UInt32 VFPtrFullOffset 'get set' : 
    UInt32 VFPtrOffset 'get set' : 
    UInt64 VBTableIndex 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.VFTableInfo* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(VFTableInfo*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_VBTableIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_VBTableIndex(UInt64): PrivateScope, Public, HideBySig, SpecialName
    get_VFPtrOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_VFPtrOffset(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_VFPtrFullOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_VFPtrFullOffset(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(VTableLayout): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.LayoutField: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.LayoutField): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.LayoutField*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.LayoutField*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    IntPtr FieldPtr 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
    System.String Name 'get set' : 
    UInt32 Offset 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.LayoutField* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(LayoutField*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_FieldPtr(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldPtr(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.LayoutBase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.LayoutBase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.LayoutBase*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.LayoutBase*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.AST.Class Class 'get set' : 
    UInt32 Offset 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.LayoutBase* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(LayoutBase*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Class(): PrivateScope, Public, HideBySig, SpecialName
    set_Class(Class): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.ClassLayout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.ClassLayout): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassLayout*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassLayout*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 BasesCount 'get ' : 
    UInt32 FieldsCount 'get ' : 
    UInt32 VFTablesCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.LayoutBase] Bases 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.LayoutField] Fields 'get set' : 
    Int32 DataSize 'get set' : 
    Int32 Size 'get set' : 
    Int32 Alignment 'get set' : 
    Int32 VBPtrOffset 'get set' IsLong : 
    Boolean HasOwnVFPtr 'get set' : 
    CppSharp.Parser.AST.VTableLayout Layout 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.VFTableInfo] VFTables 'get set' : 
    CppSharp.Parser.AST.RecordArgABI ArgABI 'get set' : 
    CppSharp.Parser.AST.CppAbi ABI 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.ClassLayout* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ClassLayout*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ABI(): PrivateScope, Public, HideBySig, SpecialName
    set_ABI(CppAbi): PrivateScope, Public, HideBySig, SpecialName
    get_ArgABI(): PrivateScope, Public, HideBySig, SpecialName
    set_ArgABI(RecordArgABI): PrivateScope, Public, HideBySig, SpecialName
    get_VFTables(): PrivateScope, Public, HideBySig, SpecialName
    set_VFTables(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(VTableLayout): PrivateScope, Public, HideBySig, SpecialName
    get_HasOwnVFPtr(): PrivateScope, Public, HideBySig, SpecialName
    set_HasOwnVFPtr(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_VBPtrOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_VBPtrOffset(Int32 IsLong): PrivateScope, Public, HideBySig, SpecialName
    get_Alignment(): PrivateScope, Public, HideBySig, SpecialName
    set_Alignment(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DataSize(): PrivateScope, Public, HideBySig, SpecialName
    set_DataSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Fields(): PrivateScope, Public, HideBySig, SpecialName
    set_Fields(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Bases(): PrivateScope, Public, HideBySig, SpecialName
    set_Bases(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_VFTablesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_BasesCount(): PrivateScope, Public, HideBySig, SpecialName
    GetVFTables(UInt32): PrivateScope, Public, HideBySig
    AddVFTables(VFTableInfo): PrivateScope, Public, HideBySig
    ClearVFTables(): PrivateScope, Public, HideBySig
    GetFields(UInt32): PrivateScope, Public, HideBySig
    AddFields(LayoutField): PrivateScope, Public, HideBySig
    ClearFields(): PrivateScope, Public, HideBySig
    GetBases(UInt32): PrivateScope, Public, HideBySig
    AddBases(LayoutBase): PrivateScope, Public, HideBySig
    ClearBases(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.Class: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.DeclarationContext
    Void .ctor(CppSharp.Parser.AST.Class): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Class*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Class*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 SpecifiersCount 'get ' : 
    UInt32 MethodsCount 'get ' : 
    UInt32 FieldsCount 'get ' : 
    UInt32 BasesCount 'get ' : 
    CppSharp.Parser.AST.ClassLayout Layout 'get set' : 
    Boolean IsInjected 'get set' : 
    Boolean IsExternCContext 'get set' : 
    Boolean HasNonTrivialDestructor 'get set' : 
    Boolean HasNonTrivialCopyConstructor 'get set' : 
    Boolean HasNonTrivialDefaultConstructor 'get set' : 
    Boolean IsPolymorphic 'get set' : 
    Boolean IsDynamic 'get set' : 
    Boolean IsUnion 'get set' : 
    Boolean IsAbstract 'get set' : 
    Boolean IsPOD 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.AccessSpecifierDecl] Specifiers 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Method] Methods 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Field] Fields 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.BaseClassSpecifier] Bases 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Bases(): PrivateScope, Public, HideBySig, SpecialName
    set_Bases(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Fields(): PrivateScope, Public, HideBySig, SpecialName
    set_Fields(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Methods(): PrivateScope, Public, HideBySig, SpecialName
    set_Methods(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Specifiers(): PrivateScope, Public, HideBySig, SpecialName
    set_Specifiers(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsPOD(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPOD(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsAbstract(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAbstract(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnion(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUnion(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsPolymorphic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPolymorphic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasNonTrivialDefaultConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_HasNonTrivialDefaultConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasNonTrivialCopyConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_HasNonTrivialCopyConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasNonTrivialDestructor(): PrivateScope, Public, HideBySig, SpecialName
    set_HasNonTrivialDestructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsExternCContext(): PrivateScope, Public, HideBySig, SpecialName
    set_IsExternCContext(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsInjected(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInjected(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(ClassLayout): PrivateScope, Public, HideBySig, SpecialName
    get_BasesCount(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_MethodsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_SpecifiersCount(): PrivateScope, Public, HideBySig, SpecialName
    GetBases(UInt32): PrivateScope, Public, HideBySig
    AddBases(BaseClassSpecifier): PrivateScope, Public, HideBySig
    ClearBases(): PrivateScope, Public, HideBySig
    GetFields(UInt32): PrivateScope, Public, HideBySig
    AddFields(Field): PrivateScope, Public, HideBySig
    ClearFields(): PrivateScope, Public, HideBySig
    GetMethods(UInt32): PrivateScope, Public, HideBySig
    AddMethods(Method): PrivateScope, Public, HideBySig
    ClearMethods(): PrivateScope, Public, HideBySig
    GetSpecifiers(UInt32): PrivateScope, Public, HideBySig
    AddSpecifiers(AccessSpecifierDecl): PrivateScope, Public, HideBySig
    ClearSpecifiers(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.Template: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.Template): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.DeclarationKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Template*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Template*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ParametersCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Declaration] Parameters 'get set' : 
    CppSharp.Parser.AST.Declaration TemplatedDecl 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TemplatedDecl(): PrivateScope, Public, HideBySig, SpecialName
    set_TemplatedDecl(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameters(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_ParametersCount(): PrivateScope, Public, HideBySig, SpecialName
    GetParameters(UInt32): PrivateScope, Public, HideBySig
    AddParameters(Declaration): PrivateScope, Public, HideBySig
    ClearParameters(): PrivateScope, Public, HideBySig
    op_Implicit(DeclarationKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.TypeAliasTemplate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Template
    Void .ctor(CppSharp.Parser.AST.TypeAliasTemplate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeAliasTemplate*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeAliasTemplate*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.TemplateParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.TemplateParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.DeclarationKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateParameter*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateParameter*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsParameterPack 'get set' : 
    UInt32 Index 'get set' : 
    UInt32 Depth 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Depth(): PrivateScope, Public, HideBySig, SpecialName
    set_Depth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IsParameterPack(): PrivateScope, Public, HideBySig, SpecialName
    set_IsParameterPack(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(DeclarationKind): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.TemplateTemplateParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Template
    Void .ctor(CppSharp.Parser.AST.TemplateTemplateParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateTemplateParameter*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateTemplateParameter*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsExpandedParameterPack 'get set' : 
    Boolean IsPackExpansion 'get set' : 
    Boolean IsParameterPack 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsParameterPack(): PrivateScope, Public, HideBySig, SpecialName
    set_IsParameterPack(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsPackExpansion(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPackExpansion(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsExpandedParameterPack(): PrivateScope, Public, HideBySig, SpecialName
    set_IsExpandedParameterPack(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TypeTemplateParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.TemplateParameter
    Void .ctor(CppSharp.Parser.AST.TypeTemplateParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeTemplateParameter*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeTemplateParameter*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType DefaultArgument 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_DefaultArgument(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultArgument(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.NonTypeTemplateParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.TemplateParameter
    Void .ctor(CppSharp.Parser.AST.NonTypeTemplateParameter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.NonTypeTemplateParameter*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.NonTypeTemplateParameter*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsExpandedParameterPack 'get set' : 
    Boolean IsPackExpansion 'get set' : 
    UInt32 Position 'get set' : 
    CppSharp.Parser.AST.Expr DefaultArgumentNew 'get set' : 
    CppSharp.Parser.AST.ExpressionObsolete DefaultArgument 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_DefaultArgument(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultArgument(ExpressionObsolete): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultArgumentNew(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultArgumentNew(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IsPackExpansion(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPackExpansion(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsExpandedParameterPack(): PrivateScope, Public, HideBySig, SpecialName
    set_IsExpandedParameterPack(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ClassTemplate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Template
    Void .ctor(CppSharp.Parser.AST.ClassTemplate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassTemplate*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassTemplate*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 SpecializationsCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.ClassTemplateSpecialization] Specializations 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Specializations(): PrivateScope, Public, HideBySig, SpecialName
    set_Specializations(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_SpecializationsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetSpecializations(UInt32): PrivateScope, Public, HideBySig
    AddSpecializations(ClassTemplateSpecialization): PrivateScope, Public, HideBySig
    ClearSpecializations(): PrivateScope, Public, HideBySig
    FindSpecialization(String): PrivateScope, Public, HideBySig
    FindPartialSpecialization(String): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.ClassTemplateSpecialization: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Class
    Void .ctor(CppSharp.Parser.AST.ClassTemplateSpecialization): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassTemplateSpecialization*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassTemplateSpecialization*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    CppSharp.Parser.AST.TemplateSpecializationKind SpecializationKind 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.TemplateArgument] Arguments 'get set' : 
    CppSharp.Parser.AST.ClassTemplate TemplatedDecl 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TemplatedDecl(): PrivateScope, Public, HideBySig, SpecialName
    set_TemplatedDecl(ClassTemplate): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_SpecializationKind(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecializationKind(TemplateSpecializationKind): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(TemplateArgument): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.ClassTemplatePartialSpecialization: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.ClassTemplateSpecialization
    Void .ctor(CppSharp.Parser.AST.ClassTemplatePartialSpecialization): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassTemplatePartialSpecialization*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassTemplatePartialSpecialization*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.FunctionTemplate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Template
    Void .ctor(CppSharp.Parser.AST.FunctionTemplate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FunctionTemplate*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FunctionTemplate*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 SpecializationsCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.FunctionTemplateSpecialization] Specializations 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Specializations(): PrivateScope, Public, HideBySig, SpecialName
    set_Specializations(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_SpecializationsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetSpecializations(UInt32): PrivateScope, Public, HideBySig
    AddSpecializations(FunctionTemplateSpecialization): PrivateScope, Public, HideBySig
    ClearSpecializations(): PrivateScope, Public, HideBySig
    FindSpecialization(String): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.FunctionTemplateSpecialization: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.FunctionTemplateSpecialization): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FunctionTemplateSpecialization*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FunctionTemplateSpecialization*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    CppSharp.Parser.AST.TemplateSpecializationKind SpecializationKind 'get set' : 
    CppSharp.Parser.AST.Function SpecializedFunction 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.TemplateArgument] Arguments 'get set' : 
    CppSharp.Parser.AST.FunctionTemplate Template 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.FunctionTemplateSpecialization* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(FunctionTemplateSpecialization*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Template(): PrivateScope, Public, HideBySig, SpecialName
    set_Template(FunctionTemplate): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_SpecializedFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecializedFunction(Function): PrivateScope, Public, HideBySig, SpecialName
    get_SpecializationKind(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecializationKind(TemplateSpecializationKind): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(TemplateArgument): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.VarTemplate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Template
    Void .ctor(CppSharp.Parser.AST.VarTemplate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VarTemplate*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VarTemplate*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 SpecializationsCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.VarTemplateSpecialization] Specializations 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Specializations(): PrivateScope, Public, HideBySig, SpecialName
    set_Specializations(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_SpecializationsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetSpecializations(UInt32): PrivateScope, Public, HideBySig
    AddSpecializations(VarTemplateSpecialization): PrivateScope, Public, HideBySig
    ClearSpecializations(): PrivateScope, Public, HideBySig
    FindSpecialization(String): PrivateScope, Public, HideBySig
    FindPartialSpecialization(String): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.VarTemplateSpecialization: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Variable
    Void .ctor(CppSharp.Parser.AST.VarTemplateSpecialization): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VarTemplateSpecialization*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VarTemplateSpecialization*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    CppSharp.Parser.AST.TemplateSpecializationKind SpecializationKind 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.TemplateArgument] Arguments 'get set' : 
    CppSharp.Parser.AST.VarTemplate TemplatedDecl 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TemplatedDecl(): PrivateScope, Public, HideBySig, SpecialName
    set_TemplatedDecl(VarTemplate): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_SpecializationKind(): PrivateScope, Public, HideBySig, SpecialName
    set_SpecializationKind(TemplateSpecializationKind): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(TemplateArgument): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.VarTemplatePartialSpecialization: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.VarTemplateSpecialization
    Void .ctor(CppSharp.Parser.AST.VarTemplatePartialSpecialization): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VarTemplatePartialSpecialization*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VarTemplatePartialSpecialization*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.UnresolvedUsingTypename: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(CppSharp.Parser.AST.UnresolvedUsingTypename): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnresolvedUsingTypename*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnresolvedUsingTypename*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.Namespace: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.DeclarationContext
    Void .ctor(CppSharp.Parser.AST.Namespace): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Namespace*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Namespace*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsInline 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsInline(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.PreprocessedEntity: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.PreprocessedEntity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PreprocessedEntity*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PreprocessedEntity*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.AST.DeclarationKind Kind 'get set' : 
    IntPtr OriginalPtr 'get set' : 
    CppSharp.Parser.AST.MacroLocation MacroLocation 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.PreprocessedEntity* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(PreprocessedEntity*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_MacroLocation(): PrivateScope, Public, HideBySig, SpecialName
    set_MacroLocation(MacroLocation): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalPtr(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginalPtr(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(DeclarationKind): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.MacroDefinition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.PreprocessedEntity
    Void .ctor(CppSharp.Parser.AST.MacroDefinition): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MacroDefinition*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MacroDefinition*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 LineNumberEnd 'get set' : 
    Int32 LineNumberStart 'get set' : 
    System.String Expression 'get set' : 
    System.String Name 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    set_Expression(String): PrivateScope, Public, HideBySig, SpecialName
    get_LineNumberStart(): PrivateScope, Public, HideBySig, SpecialName
    set_LineNumberStart(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LineNumberEnd(): PrivateScope, Public, HideBySig, SpecialName
    set_LineNumberEnd(Int32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.MacroExpansion: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.PreprocessedEntity
    Void .ctor(CppSharp.Parser.AST.MacroExpansion): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MacroExpansion*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MacroExpansion*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.MacroDefinition Definition 'get set' : 
    System.String Text 'get set' : 
    System.String Name 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_Definition(): PrivateScope, Public, HideBySig, SpecialName
    set_Definition(MacroDefinition): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TranslationUnit: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Namespace
    Void .ctor(CppSharp.Parser.AST.TranslationUnit): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TranslationUnit*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TranslationUnit*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 MacrosCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.MacroDefinition] Macros 'get set' : 
    Boolean IsSystemHeader 'get set' : 
    System.String FileName 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsSystemHeader(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSystemHeader(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Macros(): PrivateScope, Public, HideBySig, SpecialName
    set_Macros(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_MacrosCount(): PrivateScope, Public, HideBySig, SpecialName
    GetMacros(UInt32): PrivateScope, Public, HideBySig
    AddMacros(MacroDefinition): PrivateScope, Public, HideBySig
    ClearMacros(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.ASTContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.ASTContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ASTContext*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ASTContext*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 TranslationUnitsCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.TranslationUnit] TranslationUnits 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.ASTContext* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ASTContext*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TranslationUnits(): PrivateScope, Public, HideBySig, SpecialName
    set_TranslationUnits(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_TranslationUnitsCount(): PrivateScope, Public, HideBySig, SpecialName
    FindOrCreateModule(String): PrivateScope, Public, HideBySig
    GetTranslationUnits(UInt32): PrivateScope, Public, HideBySig
    AddTranslationUnits(TranslationUnit): PrivateScope, Public, HideBySig
    ClearTranslationUnits(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.ParserTargetInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.ParserTargetInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ParserTargetInfo*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ParserTargetInfo*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    UInt32 Float128Width 'get set' : 
    UInt32 Float128Align 'get set' : 
    UInt32 WCharWidth 'get set' : 
    UInt32 WCharAlign 'get set' : 
    UInt32 PointerWidth 'get set' : 
    UInt32 PointerAlign 'get set' : 
    UInt32 LongLongWidth 'get set' : 
    UInt32 LongLongAlign 'get set' : 
    UInt32 LongDoubleWidth 'get set' : 
    UInt32 LongDoubleAlign 'get set' : 
    UInt32 LongWidth 'get set' : 
    UInt32 LongAlign 'get set' : 
    UInt32 IntMaxTWidth 'get set' : 
    UInt32 IntWidth 'get set' : 
    UInt32 IntAlign 'get set' : 
    UInt32 ShortWidth 'get set' : 
    UInt32 ShortAlign 'get set' : 
    UInt32 DoubleWidth 'get set' : 
    UInt32 DoubleAlign 'get set' : 
    UInt32 FloatWidth 'get set' : 
    UInt32 FloatAlign 'get set' : 
    UInt32 HalfWidth 'get set' : 
    UInt32 HalfAlign 'get set' : 
    UInt32 Char32Width 'get set' : 
    UInt32 Char32Align 'get set' : 
    UInt32 Char16Width 'get set' : 
    UInt32 Char16Align 'get set' : 
    UInt32 CharWidth 'get set' : 
    UInt32 CharAlign 'get set' : 
    UInt32 BoolWidth 'get set' : 
    UInt32 BoolAlign 'get set' : 
    CppSharp.Parser.ParserIntType WIntType 'get set' : 
    CppSharp.Parser.ParserIntType WCharType 'get set' : 
    CppSharp.Parser.ParserIntType UIntMaxType 'get set' : 
    CppSharp.Parser.ParserIntType SizeType 'get set' : 
    CppSharp.Parser.ParserIntType IntPtrType 'get set' : 
    CppSharp.Parser.ParserIntType IntMaxType 'get set' : 
    CppSharp.Parser.ParserIntType Int64Type 'get set' : 
    CppSharp.Parser.ParserIntType Char32Type 'get set' : 
    CppSharp.Parser.ParserIntType Char16Type 'get set' : 
    System.String ABI 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.ParserTargetInfo* NativePtr 'get set' : 
  Methods:
    get_WCharWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_WCharWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Float128Align(): PrivateScope, Public, HideBySig, SpecialName
    set_Float128Align(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Float128Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Float128Width(UInt32): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ParserTargetInfo*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ABI(): PrivateScope, Public, HideBySig, SpecialName
    set_ABI(String): PrivateScope, Public, HideBySig, SpecialName
    get_Char16Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Char16Type(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_Char32Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Char32Type(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_Int64Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Int64Type(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_IntMaxType(): PrivateScope, Public, HideBySig, SpecialName
    set_IntMaxType(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_IntPtrType(): PrivateScope, Public, HideBySig, SpecialName
    set_IntPtrType(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_SizeType(): PrivateScope, Public, HideBySig, SpecialName
    set_SizeType(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_UIntMaxType(): PrivateScope, Public, HideBySig, SpecialName
    set_UIntMaxType(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_WCharType(): PrivateScope, Public, HideBySig, SpecialName
    set_WCharType(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_WIntType(): PrivateScope, Public, HideBySig, SpecialName
    set_WIntType(ParserIntType): PrivateScope, Public, HideBySig, SpecialName
    get_BoolAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_BoolAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_BoolWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_BoolWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_CharAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_CharAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_CharWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_CharWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Char16Align(): PrivateScope, Public, HideBySig, SpecialName
    set_Char16Align(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Char16Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Char16Width(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Char32Align(): PrivateScope, Public, HideBySig, SpecialName
    set_Char32Align(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Char32Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Char32Width(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_HalfAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_HalfAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_HalfWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_HalfWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_FloatAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_FloatAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_FloatWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_FloatWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_DoubleAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_DoubleAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_DoubleWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_DoubleWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ShortAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_ShortAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ShortWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ShortWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IntAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_IntAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IntWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_IntWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IntMaxTWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_IntMaxTWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_LongAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_LongAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_LongWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_LongWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_LongDoubleAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_LongDoubleAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_LongDoubleWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_LongDoubleWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_LongLongAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_LongLongAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_LongLongWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_LongLongWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_PointerAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_PointerAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_PointerWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_PointerWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_WCharAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_WCharAlign(UInt32): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.ParserDiagnosticLevel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.ParserDiagnosticLevel Ignored = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserDiagnosticLevel Note = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserDiagnosticLevel Warning = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserDiagnosticLevel Error = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserDiagnosticLevel Fatal = 4 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.ParserResultKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.ParserResultKind Success = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserResultKind Error = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserResultKind FileNotFound = 2 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.SourceLocationKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.SourceLocationKind Invalid = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.SourceLocationKind Builtin = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.SourceLocationKind CommandLine = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.SourceLocationKind System = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.SourceLocationKind User = 4 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.DeclarationKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.DeclarationKind DeclarationContext = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Typedef = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind TypeAlias = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Parameter = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Function = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Method = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Enumeration = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind EnumerationItem = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Variable = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Field = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind AccessSpecifier = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Class = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Template = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind TypeAliasTemplate = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind ClassTemplate = 14 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind ClassTemplateSpecialization = 15 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind ClassTemplatePartialSpecialization = 16 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind FunctionTemplate = 17 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Namespace = 18 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind PreprocessedEntity = 19 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind MacroDefinition = 20 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind MacroExpansion = 21 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind TranslationUnit = 22 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind Friend = 23 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind TemplateTemplateParm = 24 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind TemplateTypeParm = 25 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind NonTypeTemplateParm = 26 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind VarTemplate = 27 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind VarTemplateSpecialization = 28 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind VarTemplatePartialSpecialization = 29 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.DeclarationKind UnresolvedUsingTypename = 30 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.AccessSpecifier: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.AccessSpecifier Private = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.AccessSpecifier Protected = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.AccessSpecifier Public = 2 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.MacroLocation: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.MacroLocation Unknown = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation ClassHead = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation ClassBody = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation FunctionHead = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation FunctionParameters = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation FunctionBody = 5 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.FriendKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.FriendKind None = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.FriendKind Declared = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.FriendKind Undeclared = 2 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.CXXOperatorKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CXXOperatorKind None = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind New = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Delete = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind ArrayNew = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind ArrayDelete = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Plus = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Minus = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Star = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Slash = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Percent = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Caret = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Amp = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Pipe = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Tilde = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Exclaim = 14 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Equal = 15 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Less = 16 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Greater = 17 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PlusEqual = 18 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind MinusEqual = 19 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind StarEqual = 20 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind SlashEqual = 21 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PercentEqual = 22 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind CaretEqual = 23 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind AmpEqual = 24 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PipeEqual = 25 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind LessLess = 26 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind GreaterGreater = 27 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind LessLessEqual = 28 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind GreaterGreaterEqual = 29 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind EqualEqual = 30 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind ExclaimEqual = 31 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind LessEqual = 32 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind GreaterEqual = 33 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Spaceship = 34 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind AmpAmp = 35 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PipePipe = 36 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PlusPlus = 37 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind MinusMinus = 38 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Comma = 39 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind ArrowStar = 40 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Arrow = 41 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Call = 42 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Subscript = 43 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Conditional = 44 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Coawait = 45 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.StatementClassObsolete: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.StatementClassObsolete Any = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StatementClassObsolete BinaryOperator = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StatementClassObsolete CallExprClass = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StatementClassObsolete DeclRefExprClass = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StatementClassObsolete CXXConstructExprClass = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StatementClassObsolete CXXOperatorCallExpr = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StatementClassObsolete ImplicitCastExpr = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StatementClassObsolete ExplicitCastExpr = 7 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.TemplateSpecializationKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.TemplateSpecializationKind Undeclared = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TemplateSpecializationKind ImplicitInstantiation = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TemplateSpecializationKind ExplicitSpecialization = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TemplateSpecializationKind ExplicitInstantiationDeclaration = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TemplateSpecializationKind ExplicitInstantiationDefinition = 4 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.CXXMethodKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CXXMethodKind Normal = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind Constructor = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind Destructor = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind Conversion = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind Operator = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind UsingDirective = 5 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.RefQualifierKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.RefQualifierKind None = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RefQualifierKind LValue = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RefQualifierKind RValue = 2 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.CppAbi: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CppAbi Itanium = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CppAbi Microsoft = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CppAbi ARM = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CppAbi iOS = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CppAbi iOS64 = 4 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.RecordArgABI: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.RecordArgABI Default = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RecordArgABI DirectInMemory = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RecordArgABI Indirect = 2 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.VTableComponentKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.VTableComponentKind VCallOffset = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind VBaseOffset = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind OffsetToTop = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind RTTI = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind FunctionPointer = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind CompleteDtorPointer = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind DeletingDtorPointer = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind UnusedFunctionPointer = 7 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.ParserIntType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.ParserIntType NoInt = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType SignedChar = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType UnsignedChar = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType SignedShort = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType UnsignedShort = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType SignedInt = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType UnsignedInt = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType SignedLong = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType UnsignedLong = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType SignedLongLong = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserIntType UnsignedLongLong = 10 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.Stmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.Stmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.StmtClass): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Stmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Stmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.SourceLocation EndLoc 'get set' : 
    CppSharp.Parser.SourceLocation BeginLoc 'get set' : 
    CppSharp.Parser.SourceRange SourceRange 'get set' : 
    CppSharp.Parser.AST.StmtClass StmtClass 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.Stmt* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Stmt*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_StmtClass(): PrivateScope, Public, HideBySig, SpecialName
    set_StmtClass(StmtClass): PrivateScope, Public, HideBySig, SpecialName
    get_SourceRange(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceRange(SourceRange): PrivateScope, Public, HideBySig, SpecialName
    get_BeginLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_EndLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_EndLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(StmtClass): PrivateScope, Public, Static, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.DeclStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.DeclStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DeclStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DeclStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 GetdeclsCount 'get ' : 
    CppSharp.Parser.AST.Declaration SingleDecl 'get set' : 
    Boolean IsSingleDecl 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Declaration] Decls 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Decls(): PrivateScope, Public, HideBySig, SpecialName
    set_Decls(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsSingleDecl(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSingleDecl(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SingleDecl(): PrivateScope, Public, HideBySig, SpecialName
    set_SingleDecl(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_GetdeclsCount(): PrivateScope, Public, HideBySig, SpecialName
    Getdecls(UInt32): PrivateScope, Public, HideBySig
    Adddecls(Declaration): PrivateScope, Public, HideBySig
    Cleardecls(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.NullStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.NullStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.NullStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.NullStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasLeadingEmptyMacro 'get set' : 
    CppSharp.Parser.SourceLocation SemiLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SemiLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_SemiLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_HasLeadingEmptyMacro(): PrivateScope, Public, HideBySig, SpecialName
    set_HasLeadingEmptyMacro(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CompoundStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.CompoundStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CompoundStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CompoundStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 GetbodyCount 'get ' : 
    CppSharp.Parser.SourceLocation RBracLoc 'get set' : 
    CppSharp.Parser.SourceLocation LBracLoc 'get set' : 
    CppSharp.Parser.AST.Stmt BodyBack 'get set' : 
    CppSharp.Parser.AST.Stmt BodyFront 'get set' : 
    UInt32 Size 'get set' : 
    Boolean BodyEmpty 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Stmt] Body 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    set_Body(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_BodyEmpty(): PrivateScope, Public, HideBySig, SpecialName
    set_BodyEmpty(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_BodyFront(): PrivateScope, Public, HideBySig, SpecialName
    set_BodyFront(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_BodyBack(): PrivateScope, Public, HideBySig, SpecialName
    set_BodyBack(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_LBracLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LBracLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RBracLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RBracLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_GetbodyCount(): PrivateScope, Public, HideBySig, SpecialName
    Getbody(UInt32): PrivateScope, Public, HideBySig
    Addbody(Stmt): PrivateScope, Public, HideBySig
    Clearbody(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.SwitchCase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.SwitchCase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.StmtClass): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SwitchCase*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SwitchCase*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Stmt SubStmt 'get set' : 
    CppSharp.Parser.SourceLocation ColonLoc 'get set' : 
    CppSharp.Parser.SourceLocation KeywordLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_KeywordLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_KeywordLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_ColonLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_ColonLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_SubStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_SubStmt(Stmt): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(StmtClass): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.CaseStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.SwitchCase
    Void .ctor(CppSharp.Parser.AST.CaseStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CaseStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CaseStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CaseStmtIsGNURange 'get set' : 
    CppSharp.Parser.AST.Expr RHS 'get set' : 
    CppSharp.Parser.AST.Expr LHS 'get set' : 
    CppSharp.Parser.SourceLocation EllipsisLoc 'get set' : 
    CppSharp.Parser.SourceLocation CaseLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_CaseLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_CaseLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_EllipsisLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_EllipsisLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_LHS(): PrivateScope, Public, HideBySig, SpecialName
    set_LHS(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_RHS(): PrivateScope, Public, HideBySig, SpecialName
    set_RHS(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_CaseStmtIsGNURange(): PrivateScope, Public, HideBySig, SpecialName
    set_CaseStmtIsGNURange(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.DefaultStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.SwitchCase
    Void .ctor(CppSharp.Parser.AST.DefaultStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DefaultStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DefaultStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation DefaultLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_DefaultLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.LabelStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.LabelStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.LabelStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.LabelStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    CppSharp.Parser.AST.Stmt SubStmt 'get set' : 
    CppSharp.Parser.SourceLocation IdentLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IdentLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_IdentLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_SubStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_SubStmt(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.AttributedStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.AttributedStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AttributedStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AttributedStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Stmt SubStmt 'get set' : 
    CppSharp.Parser.SourceLocation AttrLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_AttrLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_AttrLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_SubStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_SubStmt(Stmt): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.IfStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.IfStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.IfStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.IfStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsObjCAvailabilityCheck 'get set' : 
    CppSharp.Parser.AST.DeclStmt ConditionVariableDeclStmt 'get set' : 
    Boolean HasElseStorage 'get set' : 
    Boolean HasVarStorage 'get set' : 
    Boolean HasInitStorage 'get set' : 
    Boolean Constexpr 'get set' : 
    CppSharp.Parser.SourceLocation ElseLoc 'get set' : 
    CppSharp.Parser.SourceLocation IfLoc 'get set' : 
    CppSharp.Parser.AST.Stmt Init 'get set' : 
    CppSharp.Parser.AST.Stmt Else 'get set' : 
    CppSharp.Parser.AST.Stmt Then 'get set' : 
    CppSharp.Parser.AST.Expr Cond 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Cond(): PrivateScope, Public, HideBySig, SpecialName
    set_Cond(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Then(): PrivateScope, Public, HideBySig, SpecialName
    set_Then(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_Else(): PrivateScope, Public, HideBySig, SpecialName
    set_Else(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_Init(): PrivateScope, Public, HideBySig, SpecialName
    set_Init(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_IfLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_IfLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_ElseLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_ElseLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Constexpr(): PrivateScope, Public, HideBySig, SpecialName
    set_Constexpr(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasInitStorage(): PrivateScope, Public, HideBySig, SpecialName
    set_HasInitStorage(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasVarStorage(): PrivateScope, Public, HideBySig, SpecialName
    set_HasVarStorage(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasElseStorage(): PrivateScope, Public, HideBySig, SpecialName
    set_HasElseStorage(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ConditionVariableDeclStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_ConditionVariableDeclStmt(DeclStmt): PrivateScope, Public, HideBySig, SpecialName
    get_IsObjCAvailabilityCheck(): PrivateScope, Public, HideBySig, SpecialName
    set_IsObjCAvailabilityCheck(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.SwitchStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.SwitchStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SwitchStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SwitchStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsAllEnumCasesCovered 'get set' : 
    CppSharp.Parser.AST.DeclStmt ConditionVariableDeclStmt 'get set' : 
    Boolean HasVarStorage 'get set' : 
    Boolean HasInitStorage 'get set' : 
    CppSharp.Parser.SourceLocation SwitchLoc 'get set' : 
    CppSharp.Parser.AST.Stmt Init 'get set' : 
    CppSharp.Parser.AST.Stmt Body 'get set' : 
    CppSharp.Parser.AST.Expr Cond 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Cond(): PrivateScope, Public, HideBySig, SpecialName
    set_Cond(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    set_Body(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_Init(): PrivateScope, Public, HideBySig, SpecialName
    set_Init(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_SwitchLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_SwitchLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_HasInitStorage(): PrivateScope, Public, HideBySig, SpecialName
    set_HasInitStorage(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasVarStorage(): PrivateScope, Public, HideBySig, SpecialName
    set_HasVarStorage(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ConditionVariableDeclStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_ConditionVariableDeclStmt(DeclStmt): PrivateScope, Public, HideBySig, SpecialName
    get_IsAllEnumCasesCovered(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAllEnumCasesCovered(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.WhileStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.WhileStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.WhileStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.WhileStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.DeclStmt ConditionVariableDeclStmt 'get set' : 
    Boolean HasVarStorage 'get set' : 
    CppSharp.Parser.SourceLocation WhileLoc 'get set' : 
    CppSharp.Parser.AST.Stmt Body 'get set' : 
    CppSharp.Parser.AST.Expr Cond 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Cond(): PrivateScope, Public, HideBySig, SpecialName
    set_Cond(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    set_Body(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_WhileLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_WhileLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_HasVarStorage(): PrivateScope, Public, HideBySig, SpecialName
    set_HasVarStorage(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ConditionVariableDeclStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_ConditionVariableDeclStmt(DeclStmt): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.DoStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.DoStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DoStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DoStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation WhileLoc 'get set' : 
    CppSharp.Parser.SourceLocation DoLoc 'get set' : 
    CppSharp.Parser.AST.Stmt Body 'get set' : 
    CppSharp.Parser.AST.Expr Cond 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Cond(): PrivateScope, Public, HideBySig, SpecialName
    set_Cond(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    set_Body(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_DoLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_DoLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_WhileLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_WhileLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ForStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.ForStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ForStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ForStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.DeclStmt ConditionVariableDeclStmt 'get set' : 
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation LParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation ForLoc 'get set' : 
    CppSharp.Parser.AST.Stmt Body 'get set' : 
    CppSharp.Parser.AST.Expr Inc 'get set' : 
    CppSharp.Parser.AST.Expr Cond 'get set' : 
    CppSharp.Parser.AST.Stmt Init 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Init(): PrivateScope, Public, HideBySig, SpecialName
    set_Init(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_Cond(): PrivateScope, Public, HideBySig, SpecialName
    set_Cond(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Inc(): PrivateScope, Public, HideBySig, SpecialName
    set_Inc(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    set_Body(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_ForLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_ForLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_LParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_ConditionVariableDeclStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_ConditionVariableDeclStmt(DeclStmt): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.GotoStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.GotoStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.GotoStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.GotoStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation LabelLoc 'get set' : 
    CppSharp.Parser.SourceLocation GotoLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_GotoLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_GotoLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_LabelLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.IndirectGotoStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.IndirectGotoStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.IndirectGotoStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.IndirectGotoStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr Target 'get set' : 
    CppSharp.Parser.SourceLocation StarLoc 'get set' : 
    CppSharp.Parser.SourceLocation GotoLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_GotoLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_GotoLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_StarLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_StarLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    set_Target(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ContinueStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.ContinueStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ContinueStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ContinueStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation ContinueLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ContinueLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_ContinueLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.BreakStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.BreakStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BreakStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BreakStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation BreakLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_BreakLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_BreakLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ReturnStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.ReturnStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ReturnStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ReturnStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation ReturnLoc 'get set' : 
    CppSharp.Parser.AST.Expr RetValue 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_RetValue(): PrivateScope, Public, HideBySig, SpecialName
    set_RetValue(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_ReturnLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.AsmStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.AsmStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.StmtClass): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AsmStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AsmStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 GetoutputsCount 'get ' : 
    UInt32 GetinputsCount 'get ' : 
    UInt32 NumClobbers 'get set' : 
    UInt32 NumInputs 'get set' : 
    UInt32 NumPlusOperands 'get set' : 
    UInt32 NumOutputs 'get set' : 
    Boolean Volatile 'get set' : 
    Boolean Simple 'get set' : 
    CppSharp.Parser.SourceLocation AsmLoc 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Expr] Outputs 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Expr] Inputs 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Inputs(): PrivateScope, Public, HideBySig, SpecialName
    set_Inputs(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Outputs(): PrivateScope, Public, HideBySig, SpecialName
    set_Outputs(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_AsmLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_AsmLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Simple(): PrivateScope, Public, HideBySig, SpecialName
    set_Simple(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Volatile(): PrivateScope, Public, HideBySig, SpecialName
    set_Volatile(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NumOutputs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumOutputs(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_NumPlusOperands(): PrivateScope, Public, HideBySig, SpecialName
    set_NumPlusOperands(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_NumInputs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumInputs(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_NumClobbers(): PrivateScope, Public, HideBySig, SpecialName
    set_NumClobbers(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_GetinputsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_GetoutputsCount(): PrivateScope, Public, HideBySig, SpecialName
    Getinputs(UInt32): PrivateScope, Public, HideBySig
    Addinputs(Expr): PrivateScope, Public, HideBySig
    Clearinputs(): PrivateScope, Public, HideBySig
    Getoutputs(UInt32): PrivateScope, Public, HideBySig
    Addoutputs(Expr): PrivateScope, Public, HideBySig
    Clearoutputs(): PrivateScope, Public, HideBySig
    op_Implicit(StmtClass): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.GCCAsmStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.AsmStmt
    Void .ctor(CppSharp.Parser.AST.GCCAsmStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.GCCAsmStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.GCCAsmStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.GCCAsmStmt+AsmStringPiece: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(AsmStringPiece): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(AsmStringPiece*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(AsmStringPiece*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    SByte Modifier 'get set' IsSignUnspecifiedByte : 
    UInt32 OperandNo 'get set' : 
    System.String String 'get set' : 
    Boolean IsOperand 'get set' : 
    Boolean IsString 'get set' : 
    IntPtr __Instance 'get set' : 
    AsmStringPiece* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(AsmStringPiece*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsString(): PrivateScope, Public, HideBySig, SpecialName
    set_IsString(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsOperand(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOperand(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_String(): PrivateScope, Public, HideBySig, SpecialName
    set_String(String): PrivateScope, Public, HideBySig, SpecialName
    get_OperandNo(): PrivateScope, Public, HideBySig, SpecialName
    set_OperandNo(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Modifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Modifier(SByte IsSignUnspecifiedByte): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct CppSharp.Parser.AST.GCCAsmStmt+AsmStringPiece+Kind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Kind String = 0 : Public, Static, Literal, HasDefault
    Kind Operand = 1 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.MSAsmStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.AsmStmt
    Void .ctor(CppSharp.Parser.AST.MSAsmStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MSAsmStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MSAsmStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String AsmString 'get set' : 
    UInt32 NumAsmToks 'get set' : 
    Boolean HasBraces 'get set' : 
    CppSharp.Parser.SourceLocation LBraceLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_LBraceLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LBraceLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_HasBraces(): PrivateScope, Public, HideBySig, SpecialName
    set_HasBraces(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NumAsmToks(): PrivateScope, Public, HideBySig, SpecialName
    set_NumAsmToks(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_AsmString(): PrivateScope, Public, HideBySig, SpecialName
    set_AsmString(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.SEHExceptStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.SEHExceptStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SEHExceptStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SEHExceptStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.CompoundStmt Block 'get set' : 
    CppSharp.Parser.AST.Expr FilterExpr 'get set' : 
    CppSharp.Parser.SourceLocation ExceptLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ExceptLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_ExceptLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_FilterExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Block(): PrivateScope, Public, HideBySig, SpecialName
    set_Block(CompoundStmt): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.SEHFinallyStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.SEHFinallyStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SEHFinallyStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SEHFinallyStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.CompoundStmt Block 'get set' : 
    CppSharp.Parser.SourceLocation FinallyLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_FinallyLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_FinallyLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Block(): PrivateScope, Public, HideBySig, SpecialName
    set_Block(CompoundStmt): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.SEHTryStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.SEHTryStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SEHTryStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SEHTryStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.SEHFinallyStmt FinallyHandler 'get set' : 
    CppSharp.Parser.AST.SEHExceptStmt ExceptHandler 'get set' : 
    CppSharp.Parser.AST.Stmt Handler 'get set' : 
    CppSharp.Parser.AST.CompoundStmt TryBlock 'get set' : 
    Boolean IsCXXTry 'get set' : 
    CppSharp.Parser.SourceLocation TryLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TryLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_TryLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_IsCXXTry(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCXXTry(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_TryBlock(): PrivateScope, Public, HideBySig, SpecialName
    set_TryBlock(CompoundStmt): PrivateScope, Public, HideBySig, SpecialName
    get_Handler(): PrivateScope, Public, HideBySig, SpecialName
    set_Handler(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_ExceptHandler(): PrivateScope, Public, HideBySig, SpecialName
    set_ExceptHandler(SEHExceptStmt): PrivateScope, Public, HideBySig, SpecialName
    get_FinallyHandler(): PrivateScope, Public, HideBySig, SpecialName
    set_FinallyHandler(SEHFinallyStmt): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.SEHLeaveStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.SEHLeaveStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SEHLeaveStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SEHLeaveStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation LeaveLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_LeaveLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LeaveLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CapturedStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.CapturedStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CapturedStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CapturedStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 GetcaptureInitsCount 'get ' : 
    UInt32 CaptureSize 'get set' : 
    CppSharp.Parser.AST.Stmt capturedStmt 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Expr] CaptureInits 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_CaptureInits(): PrivateScope, Public, HideBySig, SpecialName
    set_CaptureInits(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_capturedStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_capturedStmt(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_CaptureSize(): PrivateScope, Public, HideBySig, SpecialName
    set_CaptureSize(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_GetcaptureInitsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetcaptureInits(UInt32): PrivateScope, Public, HideBySig
    AddcaptureInits(Expr): PrivateScope, Public, HideBySig
    ClearcaptureInits(): PrivateScope, Public, HideBySig
Struct CppSharp.Parser.AST.CapturedStmt+VariableCaptureKind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    VariableCaptureKind This = 0 : Public, Static, Literal, HasDefault
    VariableCaptureKind ByRef = 1 : Public, Static, Literal, HasDefault
    VariableCaptureKind ByCopy = 2 : Public, Static, Literal, HasDefault
    VariableCaptureKind VLAType = 3 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.CapturedStmt+Capture: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Capture): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Capture*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Capture*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    Boolean CapturesVariableArrayType 'get set' : 
    Boolean CapturesVariableByCopy 'get set' : 
    Boolean CapturesVariable 'get set' : 
    Boolean CapturesThis 'get set' : 
    CppSharp.Parser.SourceLocation Location 'get set' : 
    VariableCaptureKind CaptureKind 'get set' : 
    IntPtr __Instance 'get set' : 
    Capture* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Capture*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_CaptureKind(): PrivateScope, Public, HideBySig, SpecialName
    set_CaptureKind(VariableCaptureKind): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_CapturesThis(): PrivateScope, Public, HideBySig, SpecialName
    set_CapturesThis(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CapturesVariable(): PrivateScope, Public, HideBySig, SpecialName
    set_CapturesVariable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CapturesVariableByCopy(): PrivateScope, Public, HideBySig, SpecialName
    set_CapturesVariableByCopy(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CapturesVariableArrayType(): PrivateScope, Public, HideBySig, SpecialName
    set_CapturesVariableArrayType(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.CXXCatchStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.CXXCatchStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXCatchStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXCatchStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Stmt HandlerBlock 'get set' : 
    CppSharp.Parser.AST.QualifiedType CaughtType 'get set' : 
    CppSharp.Parser.SourceLocation CatchLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_CatchLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_CatchLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_CaughtType(): PrivateScope, Public, HideBySig, SpecialName
    set_CaughtType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_HandlerBlock(): PrivateScope, Public, HideBySig, SpecialName
    set_HandlerBlock(Stmt): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXTryStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.CXXTryStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXTryStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXTryStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 NumHandlers 'get set' : 
    CppSharp.Parser.AST.CompoundStmt TryBlock 'get set' : 
    CppSharp.Parser.SourceLocation TryLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TryLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_TryLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_TryBlock(): PrivateScope, Public, HideBySig, SpecialName
    set_TryBlock(CompoundStmt): PrivateScope, Public, HideBySig, SpecialName
    get_NumHandlers(): PrivateScope, Public, HideBySig, SpecialName
    set_NumHandlers(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXForRangeStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.CXXForRangeStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXForRangeStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXForRangeStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation ColonLoc 'get set' : 
    CppSharp.Parser.SourceLocation CoawaitLoc 'get set' : 
    CppSharp.Parser.SourceLocation ForLoc 'get set' : 
    CppSharp.Parser.AST.DeclStmt LoopVarStmt 'get set' : 
    CppSharp.Parser.AST.DeclStmt EndStmt 'get set' : 
    CppSharp.Parser.AST.DeclStmt BeginStmt 'get set' : 
    CppSharp.Parser.AST.DeclStmt RangeStmt 'get set' : 
    CppSharp.Parser.AST.Stmt Body 'get set' : 
    CppSharp.Parser.AST.Expr Inc 'get set' : 
    CppSharp.Parser.AST.Expr Cond 'get set' : 
    CppSharp.Parser.AST.Expr RangeInit 'get set' : 
    CppSharp.Parser.AST.Stmt Init 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Init(): PrivateScope, Public, HideBySig, SpecialName
    set_Init(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_RangeInit(): PrivateScope, Public, HideBySig, SpecialName
    set_RangeInit(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Cond(): PrivateScope, Public, HideBySig, SpecialName
    set_Cond(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Inc(): PrivateScope, Public, HideBySig, SpecialName
    set_Inc(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    set_Body(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_RangeStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_RangeStmt(DeclStmt): PrivateScope, Public, HideBySig, SpecialName
    get_BeginStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_BeginStmt(DeclStmt): PrivateScope, Public, HideBySig, SpecialName
    get_EndStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_EndStmt(DeclStmt): PrivateScope, Public, HideBySig, SpecialName
    get_LoopVarStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_LoopVarStmt(DeclStmt): PrivateScope, Public, HideBySig, SpecialName
    get_ForLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_ForLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_CoawaitLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_CoawaitLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_ColonLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_ColonLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.MSDependentExistsStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.MSDependentExistsStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MSDependentExistsStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MSDependentExistsStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.CompoundStmt SubStmt 'get set' : 
    Boolean IsIfNotExists 'get set' : 
    Boolean IsIfExists 'get set' : 
    CppSharp.Parser.SourceLocation KeywordLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_KeywordLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_KeywordLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_IsIfExists(): PrivateScope, Public, HideBySig, SpecialName
    set_IsIfExists(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsIfNotExists(): PrivateScope, Public, HideBySig, SpecialName
    set_IsIfNotExists(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SubStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_SubStmt(CompoundStmt): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CoroutineBodyStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.CoroutineBodyStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CoroutineBodyStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CoroutineBodyStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Stmt ReturnStmtOnAllocFailure 'get set' : 
    CppSharp.Parser.AST.Stmt ReturnStmt 'get set' : 
    CppSharp.Parser.AST.Stmt ResultDecl 'get set' : 
    CppSharp.Parser.AST.Expr ReturnValueInit 'get set' : 
    CppSharp.Parser.AST.Expr Deallocate 'get set' : 
    CppSharp.Parser.AST.Expr Allocate 'get set' : 
    CppSharp.Parser.AST.Stmt FallthroughHandler 'get set' : 
    CppSharp.Parser.AST.Stmt ExceptionHandler 'get set' : 
    CppSharp.Parser.AST.Stmt FinalSuspendStmt 'get set' : 
    CppSharp.Parser.AST.Stmt InitSuspendStmt 'get set' : 
    CppSharp.Parser.AST.Stmt PromiseDeclStmt 'get set' : 
    CppSharp.Parser.AST.Stmt Body 'get set' : 
    Boolean HasDependentPromiseType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_HasDependentPromiseType(): PrivateScope, Public, HideBySig, SpecialName
    set_HasDependentPromiseType(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    set_Body(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_PromiseDeclStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_PromiseDeclStmt(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_InitSuspendStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_InitSuspendStmt(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_FinalSuspendStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_FinalSuspendStmt(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_ExceptionHandler(): PrivateScope, Public, HideBySig, SpecialName
    set_ExceptionHandler(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_FallthroughHandler(): PrivateScope, Public, HideBySig, SpecialName
    set_FallthroughHandler(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_Allocate(): PrivateScope, Public, HideBySig, SpecialName
    set_Allocate(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Deallocate(): PrivateScope, Public, HideBySig, SpecialName
    set_Deallocate(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_ReturnValueInit(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnValueInit(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_ResultDecl(): PrivateScope, Public, HideBySig, SpecialName
    set_ResultDecl(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_ReturnStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnStmt(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_ReturnStmtOnAllocFailure(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnStmtOnAllocFailure(Stmt): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.CoroutineBodyStmt+SubStmt: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SubStmt Body = 0 : Public, Static, Literal, HasDefault
    SubStmt Promise = 1 : Public, Static, Literal, HasDefault
    SubStmt InitSuspend = 2 : Public, Static, Literal, HasDefault
    SubStmt FinalSuspend = 3 : Public, Static, Literal, HasDefault
    SubStmt OnException = 4 : Public, Static, Literal, HasDefault
    SubStmt OnFallthrough = 5 : Public, Static, Literal, HasDefault
    SubStmt Allocate = 6 : Public, Static, Literal, HasDefault
    SubStmt Deallocate = 7 : Public, Static, Literal, HasDefault
    SubStmt ReturnValue = 8 : Public, Static, Literal, HasDefault
    SubStmt ResultDecl = 9 : Public, Static, Literal, HasDefault
    SubStmt ReturnStmt = 10 : Public, Static, Literal, HasDefault
    SubStmt ReturnStmtOnAllocFailure = 11 : Public, Static, Literal, HasDefault
    SubStmt FirstParamMove = 12 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.CoroutineBodyStmt+CtorArgs: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(CtorArgs): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CtorArgs*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CtorArgs*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    IntPtr __Instance 'get set' : 
    CtorArgs* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(CtorArgs*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.CoreturnStmt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.CoreturnStmt): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CoreturnStmt*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CoreturnStmt*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr PromiseCall 'get set' : 
    CppSharp.Parser.AST.Expr Operand 'get set' : 
    CppSharp.Parser.SourceLocation KeywordLoc 'get set' : 
    Boolean IsImplicit 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsImplicit(): PrivateScope, Public, HideBySig, SpecialName
    set_IsImplicit(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_KeywordLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_KeywordLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Operand(): PrivateScope, Public, HideBySig, SpecialName
    set_Operand(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_PromiseCall(): PrivateScope, Public, HideBySig, SpecialName
    set_PromiseCall(Expr): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.CoreturnStmt+SubStmt: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SubStmt Operand = 0 : Public, Static, Literal, HasDefault
    SubStmt PromiseCall = 1 : Public, Static, Literal, HasDefault
    SubStmt Count = 2 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.Expr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Stmt
    Void .ctor(CppSharp.Parser.AST.Expr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.StmtClass): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Expr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Expr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasPlaceholderType 'get set' : 
    CppSharp.Parser.AST.Declaration ReferencedDeclOfCallee 'get set' : 
    CppSharp.Parser.AST.Field SourceBitField 'get set' : 
    Boolean IsOrdinaryOrBitFieldObject 'get set' : 
    Boolean IsGLValue 'get set' : 
    Boolean IsXValue 'get set' : 
    Boolean IsRValue 'get set' : 
    Boolean IsLValue 'get set' : 
    CppSharp.Parser.SourceLocation ExprLoc 'get set' : 
    Boolean ContainsUnexpandedParameterPack 'get set' : 
    Boolean InstantiationDependent 'get set' : 
    Boolean TypeDependent 'get set' : 
    Boolean ValueDependent 'get set' : 
    CppSharp.Parser.AST.QualifiedType Type 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_ValueDependent(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueDependent(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_TypeDependent(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeDependent(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_InstantiationDependent(): PrivateScope, Public, HideBySig, SpecialName
    set_InstantiationDependent(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ContainsUnexpandedParameterPack(): PrivateScope, Public, HideBySig, SpecialName
    set_ContainsUnexpandedParameterPack(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ExprLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_ExprLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_IsLValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IsLValue(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsRValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IsRValue(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsXValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IsXValue(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsGLValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IsGLValue(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsOrdinaryOrBitFieldObject(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOrdinaryOrBitFieldObject(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SourceBitField(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceBitField(Field): PrivateScope, Public, HideBySig, SpecialName
    get_ReferencedDeclOfCallee(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferencedDeclOfCallee(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_HasPlaceholderType(): PrivateScope, Public, HideBySig, SpecialName
    set_HasPlaceholderType(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(StmtClass): PrivateScope, Public, Static, HideBySig, SpecialName
Struct CppSharp.Parser.AST.Expr+LValueClassification: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    LValueClassification Valid = 0 : Public, Static, Literal, HasDefault
    LValueClassification NotObjectType = 1 : Public, Static, Literal, HasDefault
    LValueClassification IncompleteVoidType = 2 : Public, Static, Literal, HasDefault
    LValueClassification DuplicateVectorComponents = 3 : Public, Static, Literal, HasDefault
    LValueClassification InvalidExpression = 4 : Public, Static, Literal, HasDefault
    LValueClassification InvalidMessageExpression = 5 : Public, Static, Literal, HasDefault
    LValueClassification MemberFunction = 6 : Public, Static, Literal, HasDefault
    LValueClassification SubObjCPropertySetting = 7 : Public, Static, Literal, HasDefault
    LValueClassification ClassTemporary = 8 : Public, Static, Literal, HasDefault
    LValueClassification ArrayTemporary = 9 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.Expr+IsModifiableLvalueResult: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    IsModifiableLvalueResult Valid = 0 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult NotObjectType = 1 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult IncompleteVoidType = 2 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult DuplicateVectorComponents = 3 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult InvalidExpression = 4 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult LValueCast = 5 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult IncompleteType = 6 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult ConstQualified = 7 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult ConstQualifiedField = 8 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult ConstAddrSpace = 9 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult ArrayType = 10 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult NoSetterProperty = 11 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult MemberFunction = 12 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult SubObjCPropertySetting = 13 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult InvalidMessageExpression = 14 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult ClassTemporary = 15 : Public, Static, Literal, HasDefault
    IsModifiableLvalueResult ArrayTemporary = 16 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.Expr+SideEffectsKind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SideEffectsKind NoSideEffects = 0 : Public, Static, Literal, HasDefault
    SideEffectsKind AllowUndefinedBehavior = 1 : Public, Static, Literal, HasDefault
    SideEffectsKind AllowSideEffects = 2 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.Expr+ConstExprUsage: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ConstExprUsage EvaluateForCodeGen = 0 : Public, Static, Literal, HasDefault
    ConstExprUsage EvaluateForMangling = 1 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.Expr+NullPointerConstantKind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NullPointerConstantKind NotNull = 0 : Public, Static, Literal, HasDefault
    NullPointerConstantKind ZeroExpression = 1 : Public, Static, Literal, HasDefault
    NullPointerConstantKind ZeroLiteral = 2 : Public, Static, Literal, HasDefault
    NullPointerConstantKind CXX11_nullptr = 3 : Public, Static, Literal, HasDefault
    NullPointerConstantKind GNUNull = 4 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.Expr+NullPointerConstantValueDependence: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NullPointerConstantValueDependence NeverValueDependent = 0 : Public, Static, Literal, HasDefault
    NullPointerConstantValueDependence ValueDependentIsNull = 1 : Public, Static, Literal, HasDefault
    NullPointerConstantValueDependence ValueDependentIsNotNull = 2 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.Expr+Classification: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Classification): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Classification*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Classification*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    Boolean IsModifiable 'get set' : 
    Boolean IsRValue 'get set' : 
    Boolean IsPRValue 'get set' : 
    Boolean IsGLValue 'get set' : 
    Boolean IsXValue 'get set' : 
    Boolean IsLValue 'get set' : 
    ModifiableType Modifiable 'get set' : 
    Kinds Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    Classification* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Classification*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(Kinds): PrivateScope, Public, HideBySig, SpecialName
    get_Modifiable(): PrivateScope, Public, HideBySig, SpecialName
    set_Modifiable(ModifiableType): PrivateScope, Public, HideBySig, SpecialName
    get_IsLValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IsLValue(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsXValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IsXValue(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsGLValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IsGLValue(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsPRValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPRValue(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsRValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IsRValue(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsModifiable(): PrivateScope, Public, HideBySig, SpecialName
    set_IsModifiable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct CppSharp.Parser.AST.Expr+Classification+Kinds: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Kinds LValue = 0 : Public, Static, Literal, HasDefault
    Kinds XValue = 1 : Public, Static, Literal, HasDefault
    Kinds Function = 2 : Public, Static, Literal, HasDefault
    Kinds Void = 3 : Public, Static, Literal, HasDefault
    Kinds AddressableVoid = 4 : Public, Static, Literal, HasDefault
    Kinds DuplicateVectorComponents = 5 : Public, Static, Literal, HasDefault
    Kinds MemberFunction = 6 : Public, Static, Literal, HasDefault
    Kinds SubObjCPropertySetting = 7 : Public, Static, Literal, HasDefault
    Kinds ClassTemporary = 8 : Public, Static, Literal, HasDefault
    Kinds ArrayTemporary = 9 : Public, Static, Literal, HasDefault
    Kinds ObjCMessageRValue = 10 : Public, Static, Literal, HasDefault
    Kinds PRValue = 11 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.Expr+Classification+ModifiableType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ModifiableType Untested = 0 : Public, Static, Literal, HasDefault
    ModifiableType Modifiable = 1 : Public, Static, Literal, HasDefault
    ModifiableType RValue = 2 : Public, Static, Literal, HasDefault
    ModifiableType Function = 3 : Public, Static, Literal, HasDefault
    ModifiableType LValueCast = 4 : Public, Static, Literal, HasDefault
    ModifiableType NoSetterProperty = 5 : Public, Static, Literal, HasDefault
    ModifiableType ConstQualified = 6 : Public, Static, Literal, HasDefault
    ModifiableType ConstQualifiedField = 7 : Public, Static, Literal, HasDefault
    ModifiableType ConstAddrSpace = 8 : Public, Static, Literal, HasDefault
    ModifiableType ArrayType = 9 : Public, Static, Literal, HasDefault
    ModifiableType IncompleteType = 10 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.FullExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.FullExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.StmtClass): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FullExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FullExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr SubExpr 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SubExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_SubExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(StmtClass): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.ConstantExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.FullExpr
    Void .ctor(CppSharp.Parser.AST.ConstantExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ConstantExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ConstantExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.OpaqueValueExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.OpaqueValueExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.OpaqueValueExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.OpaqueValueExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr SourceExpr 'get set' : 
    CppSharp.Parser.SourceLocation Location 'get set' : 
    Boolean IsUnique 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsUnique(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUnique(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_SourceExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.DeclRefExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.DeclRefExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DeclRefExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DeclRefExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean RefersToEnclosingVariableOrCapture 'get set' : 
    UInt32 NumTemplateArgs 'get set' : 
    Boolean HasExplicitTemplateArgs 'get set' : 
    Boolean HasTemplateKeyword 'get set' : 
    CppSharp.Parser.SourceLocation RAngleLoc 'get set' : 
    CppSharp.Parser.SourceLocation LAngleLoc 'get set' : 
    CppSharp.Parser.SourceLocation TemplateKeywordLoc 'get set' : 
    Boolean HasTemplateKWAndArgsInfo 'get set' : 
    CppSharp.Parser.AST.Declaration FoundDecl 'get set' : 
    Boolean HasQualifier 'get set' : 
    Boolean HadMultipleCandidates 'get set' : 
    CppSharp.Parser.SourceLocation Location 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_HadMultipleCandidates(): PrivateScope, Public, HideBySig, SpecialName
    set_HadMultipleCandidates(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasQualifier(): PrivateScope, Public, HideBySig, SpecialName
    set_HasQualifier(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FoundDecl(): PrivateScope, Public, HideBySig, SpecialName
    set_FoundDecl(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_HasTemplateKWAndArgsInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_HasTemplateKWAndArgsInfo(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_TemplateKeywordLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_TemplateKeywordLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_LAngleLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LAngleLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RAngleLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RAngleLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_HasTemplateKeyword(): PrivateScope, Public, HideBySig, SpecialName
    set_HasTemplateKeyword(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasExplicitTemplateArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_HasExplicitTemplateArgs(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NumTemplateArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumTemplateArgs(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_RefersToEnclosingVariableOrCapture(): PrivateScope, Public, HideBySig, SpecialName
    set_RefersToEnclosingVariableOrCapture(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.IntegerLiteral: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.IntegerLiteral): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.IntegerLiteral*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.IntegerLiteral*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt64 Value 'get set' : 
    CppSharp.Parser.SourceLocation Location 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(UInt64): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.FixedPointLiteral: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.FixedPointLiteral): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FixedPointLiteral*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FixedPointLiteral*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt64 Value 'get set' : 
    CppSharp.Parser.SourceLocation Location 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(UInt64): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CharacterLiteral: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CharacterLiteral): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CharacterLiteral*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CharacterLiteral*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 Value 'get set' : 
    CharacterKind Kind 'get set' : 
    CppSharp.Parser.SourceLocation Location 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(CharacterKind): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(UInt32): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.CharacterLiteral+CharacterKind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CharacterKind Ascii = 0 : Public, Static, Literal, HasDefault
    CharacterKind Wide = 1 : Public, Static, Literal, HasDefault
    CharacterKind UTF8 = 2 : Public, Static, Literal, HasDefault
    CharacterKind UTF16 = 3 : Public, Static, Literal, HasDefault
    CharacterKind UTF32 = 4 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.FloatingLiteral: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.FloatingLiteral): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FloatingLiteral*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FloatingLiteral*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double ValueAsApproximateDouble 'get set' : 
    CppSharp.Parser.SourceLocation Location 'get set' : 
    Boolean Exact 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Exact(): PrivateScope, Public, HideBySig, SpecialName
    set_Exact(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_ValueAsApproximateDouble(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueAsApproximateDouble(Double): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ImaginaryLiteral: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.ImaginaryLiteral): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ImaginaryLiteral*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ImaginaryLiteral*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr SubExpr 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SubExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_SubExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.StringLiteral: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.StringLiteral): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.StringLiteral*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.StringLiteral*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 NumConcatenated 'get set' : 
    Boolean ContainsNonAsciiOrNull 'get set' : 
    Boolean ContainsNonAscii 'get set' : 
    Boolean IsPascal 'get set' : 
    Boolean IsUTF32 'get set' : 
    Boolean IsUTF16 'get set' : 
    Boolean IsUTF8 'get set' : 
    Boolean IsWide 'get set' : 
    Boolean IsAscii 'get set' : 
    StringKind Kind 'get set' : 
    UInt32 CharByteWidth 'get set' : 
    UInt32 Length 'get set' : 
    UInt32 ByteLength 'get set' : 
    System.String Bytes 'get set' : 
    System.String String 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_String(): PrivateScope, Public, HideBySig, SpecialName
    set_String(String): PrivateScope, Public, HideBySig, SpecialName
    get_Bytes(): PrivateScope, Public, HideBySig, SpecialName
    set_Bytes(String): PrivateScope, Public, HideBySig, SpecialName
    get_ByteLength(): PrivateScope, Public, HideBySig, SpecialName
    set_ByteLength(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_CharByteWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_CharByteWidth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(StringKind): PrivateScope, Public, HideBySig, SpecialName
    get_IsAscii(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAscii(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsWide(): PrivateScope, Public, HideBySig, SpecialName
    set_IsWide(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsUTF8(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUTF8(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsUTF16(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUTF16(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsUTF32(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUTF32(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsPascal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPascal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ContainsNonAscii(): PrivateScope, Public, HideBySig, SpecialName
    set_ContainsNonAscii(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ContainsNonAsciiOrNull(): PrivateScope, Public, HideBySig, SpecialName
    set_ContainsNonAsciiOrNull(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NumConcatenated(): PrivateScope, Public, HideBySig, SpecialName
    set_NumConcatenated(UInt32): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.StringLiteral+StringKind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    StringKind Ascii = 0 : Public, Static, Literal, HasDefault
    StringKind Wide = 1 : Public, Static, Literal, HasDefault
    StringKind UTF8 = 2 : Public, Static, Literal, HasDefault
    StringKind UTF16 = 3 : Public, Static, Literal, HasDefault
    StringKind UTF32 = 4 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.PredefinedExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.PredefinedExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PredefinedExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PredefinedExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IdentKind identKind 'get set' : 
    CppSharp.Parser.SourceLocation Location 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_identKind(): PrivateScope, Public, HideBySig, SpecialName
    set_identKind(IdentKind): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.PredefinedExpr+IdentKind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    IdentKind Func = 0 : Public, Static, Literal, HasDefault
    IdentKind Function = 1 : Public, Static, Literal, HasDefault
    IdentKind LFunction = 2 : Public, Static, Literal, HasDefault
    IdentKind FuncDName = 3 : Public, Static, Literal, HasDefault
    IdentKind FuncSig = 4 : Public, Static, Literal, HasDefault
    IdentKind LFuncSig = 5 : Public, Static, Literal, HasDefault
    IdentKind PrettyFunction = 6 : Public, Static, Literal, HasDefault
    IdentKind PrettyFunctionNoVirtual = 7 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.ParenExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.ParenExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ParenExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ParenExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation RParen 'get set' : 
    CppSharp.Parser.SourceLocation LParen 'get set' : 
    CppSharp.Parser.AST.Expr SubExpr 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SubExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_SubExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_LParen(): PrivateScope, Public, HideBySig, SpecialName
    set_LParen(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParen(): PrivateScope, Public, HideBySig, SpecialName
    set_RParen(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.UnaryOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.UnaryOperator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnaryOperator*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnaryOperator*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsArithmeticOp 'get set' : 
    Boolean IsIncrementDecrementOp 'get set' : 
    Boolean IsDecrementOp 'get set' : 
    Boolean IsIncrementOp 'get set' : 
    Boolean IsPostfix 'get set' : 
    Boolean IsPrefix 'get set' : 
    Boolean CanOverflow 'get set' : 
    CppSharp.Parser.SourceLocation OperatorLoc 'get set' : 
    CppSharp.Parser.AST.Expr SubExpr 'get set' : 
    CppSharp.Parser.AST.UnaryOperatorKind Opcode 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Opcode(): PrivateScope, Public, HideBySig, SpecialName
    set_Opcode(UnaryOperatorKind): PrivateScope, Public, HideBySig, SpecialName
    get_SubExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_SubExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_CanOverflow(): PrivateScope, Public, HideBySig, SpecialName
    set_CanOverflow(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsPrefix(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPrefix(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsPostfix(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPostfix(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsIncrementOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsIncrementOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsDecrementOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDecrementOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsIncrementDecrementOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsIncrementDecrementOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsArithmeticOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsArithmeticOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.OffsetOfExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.OffsetOfExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.OffsetOfExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.OffsetOfExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 NumExpressions 'get set' : 
    UInt32 NumComponents 'get set' : 
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation OperatorLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_OperatorLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_NumComponents(): PrivateScope, Public, HideBySig, SpecialName
    set_NumComponents(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_NumExpressions(): PrivateScope, Public, HideBySig, SpecialName
    set_NumExpressions(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.UnaryExprOrTypeTraitExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.UnaryExprOrTypeTraitExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnaryExprOrTypeTraitExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnaryExprOrTypeTraitExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType TypeOfArgument 'get set' : 
    CppSharp.Parser.AST.Expr ArgumentExpr 'get set' : 
    CppSharp.Parser.AST.QualifiedType ArgumentType 'get set' : 
    Boolean IsArgumentType 'get set' : 
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation OperatorLoc 'get set' : 
    CppSharp.Parser.AST.UnaryExprOrTypeTrait Kind 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(UnaryExprOrTypeTrait): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_IsArgumentType(): PrivateScope, Public, HideBySig, SpecialName
    set_IsArgumentType(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentType(): PrivateScope, Public, HideBySig, SpecialName
    set_ArgumentType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_ArgumentExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_TypeOfArgument(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeOfArgument(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ArraySubscriptExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.ArraySubscriptExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ArraySubscriptExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ArraySubscriptExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr Idx 'get set' : 
    CppSharp.Parser.AST.Expr Base 'get set' : 
    CppSharp.Parser.SourceLocation RBracketLoc 'get set' : 
    CppSharp.Parser.AST.Expr RHS 'get set' : 
    CppSharp.Parser.AST.Expr LHS 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_LHS(): PrivateScope, Public, HideBySig, SpecialName
    set_LHS(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_RHS(): PrivateScope, Public, HideBySig, SpecialName
    set_RHS(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_RBracketLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RBracketLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Base(): PrivateScope, Public, HideBySig, SpecialName
    set_Base(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Idx(): PrivateScope, Public, HideBySig, SpecialName
    set_Idx(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CallExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CallExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.StmtClass): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CallExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CallExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 GetargumentsCount 'get ' : 
    Boolean IsCallToStdMove 'get set' : 
    UInt32 BuiltinCallee 'get set' : 
    UInt32 NumCommas 'get set' : 
    UInt32 NumArgs 'get set' : 
    CppSharp.Parser.AST.Function DirectCallee 'get set' : 
    CppSharp.Parser.AST.Declaration CalleeDecl 'get set' : 
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.AST.Expr Callee 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Expr] Arguments 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Callee(): PrivateScope, Public, HideBySig, SpecialName
    set_Callee(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_CalleeDecl(): PrivateScope, Public, HideBySig, SpecialName
    set_CalleeDecl(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_DirectCallee(): PrivateScope, Public, HideBySig, SpecialName
    set_DirectCallee(Function): PrivateScope, Public, HideBySig, SpecialName
    get_NumArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumArgs(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_NumCommas(): PrivateScope, Public, HideBySig, SpecialName
    set_NumCommas(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_BuiltinCallee(): PrivateScope, Public, HideBySig, SpecialName
    set_BuiltinCallee(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IsCallToStdMove(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCallToStdMove(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GetargumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    Getarguments(UInt32): PrivateScope, Public, HideBySig
    Addarguments(Expr): PrivateScope, Public, HideBySig
    Cleararguments(): PrivateScope, Public, HideBySig
    op_Implicit(StmtClass): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.MemberExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.MemberExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MemberExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MemberExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsImplicitAccess 'get set' : 
    CppSharp.Parser.SourceLocation OperatorLoc 'get set' : 
    UInt32 NumTemplateArgs 'get set' : 
    Boolean HasExplicitTemplateArgs 'get set' : 
    Boolean HasTemplateKeyword 'get set' : 
    CppSharp.Parser.SourceLocation RAngleLoc 'get set' : 
    CppSharp.Parser.SourceLocation LAngleLoc 'get set' : 
    CppSharp.Parser.SourceLocation TemplateKeywordLoc 'get set' : 
    Boolean HasQualifier 'get set' : 
    Boolean HadMultipleCandidates 'get set' : 
    CppSharp.Parser.SourceLocation MemberLoc 'get set' : 
    Boolean Arrow 'get set' : 
    CppSharp.Parser.AST.Expr Base 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Base(): PrivateScope, Public, HideBySig, SpecialName
    set_Base(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Arrow(): PrivateScope, Public, HideBySig, SpecialName
    set_Arrow(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MemberLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_MemberLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_HadMultipleCandidates(): PrivateScope, Public, HideBySig, SpecialName
    set_HadMultipleCandidates(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasQualifier(): PrivateScope, Public, HideBySig, SpecialName
    set_HasQualifier(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_TemplateKeywordLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_TemplateKeywordLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_LAngleLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LAngleLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RAngleLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RAngleLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_HasTemplateKeyword(): PrivateScope, Public, HideBySig, SpecialName
    set_HasTemplateKeyword(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasExplicitTemplateArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_HasExplicitTemplateArgs(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NumTemplateArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumTemplateArgs(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_IsImplicitAccess(): PrivateScope, Public, HideBySig, SpecialName
    set_IsImplicitAccess(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CompoundLiteralExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CompoundLiteralExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CompoundLiteralExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CompoundLiteralExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation LParenLoc 'get set' : 
    Boolean FileScope 'get set' : 
    CppSharp.Parser.AST.Expr Initializer 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Initializer(): PrivateScope, Public, HideBySig, SpecialName
    set_Initializer(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_FileScope(): PrivateScope, Public, HideBySig, SpecialName
    set_FileScope(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_LParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CastExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CastExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.StmtClass): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CastExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CastExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 PathSize 'get set' : 
    Boolean PathEmpty 'get set' : 
    CppSharp.Parser.AST.Declaration ConversionFunction 'get set' : 
    CppSharp.Parser.AST.Expr SubExprAsWritten 'get set' : 
    System.String CastKindName 'get set' : 
    CppSharp.Parser.AST.Expr SubExpr 'get set' : 
    CppSharp.Parser.AST.CastKind CastKind 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_CastKind(): PrivateScope, Public, HideBySig, SpecialName
    set_CastKind(CastKind): PrivateScope, Public, HideBySig, SpecialName
    get_SubExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_SubExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_CastKindName(): PrivateScope, Public, HideBySig, SpecialName
    set_CastKindName(String): PrivateScope, Public, HideBySig, SpecialName
    get_SubExprAsWritten(): PrivateScope, Public, HideBySig, SpecialName
    set_SubExprAsWritten(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_ConversionFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_ConversionFunction(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_PathEmpty(): PrivateScope, Public, HideBySig, SpecialName
    set_PathEmpty(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_PathSize(): PrivateScope, Public, HideBySig, SpecialName
    set_PathSize(UInt32): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(StmtClass): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.ImplicitCastExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.CastExpr
    Void .ctor(CppSharp.Parser.AST.ImplicitCastExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ImplicitCastExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ImplicitCastExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsPartOfExplicitCast 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsPartOfExplicitCast(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPartOfExplicitCast(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.ImplicitCastExpr+OnStack_t: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OnStack_t OnStack = 0 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.ExplicitCastExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.CastExpr
    Void .ctor(CppSharp.Parser.AST.ExplicitCastExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.StmtClass): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ExplicitCastExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ExplicitCastExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType TypeAsWritten 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TypeAsWritten(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeAsWritten(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(StmtClass): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.CStyleCastExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.ExplicitCastExpr
    Void .ctor(CppSharp.Parser.AST.CStyleCastExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CStyleCastExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CStyleCastExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation LParenLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_LParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.BinaryOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.BinaryOperator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.StmtClass): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BinaryOperator*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BinaryOperator*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsFEnvAccessOn 'get set' : 
    Boolean IsFPContractableWithinStatement 'get set' : 
    Boolean IsShiftAssignOp 'get set' : 
    Boolean IsCompoundAssignmentOp 'get set' : 
    Boolean IsAssignmentOp 'get set' : 
    Boolean IsLogicalOp 'get set' : 
    Boolean IsComparisonOp 'get set' : 
    Boolean IsEqualityOp 'get set' : 
    Boolean IsRelationalOp 'get set' : 
    Boolean IsBitwiseOp 'get set' : 
    Boolean IsShiftOp 'get set' : 
    Boolean IsAdditiveOp 'get set' : 
    Boolean IsMultiplicativeOp 'get set' : 
    Boolean IsPtrMemOp 'get set' : 
    System.String OpcodeStr 'get set' : 
    CppSharp.Parser.AST.Expr RHS 'get set' : 
    CppSharp.Parser.AST.Expr LHS 'get set' : 
    CppSharp.Parser.AST.BinaryOperatorKind Opcode 'get set' : 
    CppSharp.Parser.SourceLocation OperatorLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_OperatorLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Opcode(): PrivateScope, Public, HideBySig, SpecialName
    set_Opcode(BinaryOperatorKind): PrivateScope, Public, HideBySig, SpecialName
    get_LHS(): PrivateScope, Public, HideBySig, SpecialName
    set_LHS(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_RHS(): PrivateScope, Public, HideBySig, SpecialName
    set_RHS(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_OpcodeStr(): PrivateScope, Public, HideBySig, SpecialName
    set_OpcodeStr(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsPtrMemOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPtrMemOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsMultiplicativeOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMultiplicativeOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsAdditiveOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAdditiveOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsShiftOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsShiftOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsBitwiseOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBitwiseOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsRelationalOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsRelationalOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsEqualityOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEqualityOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsComparisonOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsComparisonOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsLogicalOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsLogicalOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsAssignmentOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAssignmentOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsCompoundAssignmentOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCompoundAssignmentOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsShiftAssignOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsShiftAssignOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsFPContractableWithinStatement(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFPContractableWithinStatement(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsFEnvAccessOn(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFEnvAccessOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(StmtClass): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.CompoundAssignOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.BinaryOperator
    Void .ctor(CppSharp.Parser.AST.CompoundAssignOperator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CompoundAssignOperator*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CompoundAssignOperator*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType ComputationResultType 'get set' : 
    CppSharp.Parser.AST.QualifiedType ComputationLHSType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ComputationLHSType(): PrivateScope, Public, HideBySig, SpecialName
    set_ComputationLHSType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_ComputationResultType(): PrivateScope, Public, HideBySig, SpecialName
    set_ComputationResultType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.AbstractConditionalOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.AbstractConditionalOperator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.StmtClass): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AbstractConditionalOperator*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AbstractConditionalOperator*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation ColonLoc 'get set' : 
    CppSharp.Parser.SourceLocation QuestionLoc 'get set' : 
    CppSharp.Parser.AST.Expr FalseExpr 'get set' : 
    CppSharp.Parser.AST.Expr TrueExpr 'get set' : 
    CppSharp.Parser.AST.Expr Cond 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Cond(): PrivateScope, Public, HideBySig, SpecialName
    set_Cond(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_TrueExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_TrueExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_FalseExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_FalseExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_QuestionLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_QuestionLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_ColonLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_ColonLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(StmtClass): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.ConditionalOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.AbstractConditionalOperator
    Void .ctor(CppSharp.Parser.AST.ConditionalOperator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ConditionalOperator*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ConditionalOperator*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr RHS 'get set' : 
    CppSharp.Parser.AST.Expr LHS 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_LHS(): PrivateScope, Public, HideBySig, SpecialName
    set_LHS(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_RHS(): PrivateScope, Public, HideBySig, SpecialName
    set_RHS(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.BinaryConditionalOperator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.AbstractConditionalOperator
    Void .ctor(CppSharp.Parser.AST.BinaryConditionalOperator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BinaryConditionalOperator*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BinaryConditionalOperator*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.OpaqueValueExpr OpaqueValue 'get set' : 
    CppSharp.Parser.AST.Expr Common 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Common(): PrivateScope, Public, HideBySig, SpecialName
    set_Common(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_OpaqueValue(): PrivateScope, Public, HideBySig, SpecialName
    set_OpaqueValue(OpaqueValueExpr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.AddrLabelExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.AddrLabelExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AddrLabelExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AddrLabelExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation LabelLoc 'get set' : 
    CppSharp.Parser.SourceLocation AmpAmpLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_AmpAmpLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_AmpAmpLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_LabelLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.StmtExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.StmtExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.StmtExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.StmtExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation LParenLoc 'get set' : 
    CppSharp.Parser.AST.CompoundStmt SubStmt 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SubStmt(): PrivateScope, Public, HideBySig, SpecialName
    set_SubStmt(CompoundStmt): PrivateScope, Public, HideBySig, SpecialName
    get_LParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ShuffleVectorExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.ShuffleVectorExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ShuffleVectorExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ShuffleVectorExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 NumSubExprs 'get set' : 
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation BuiltinLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_BuiltinLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_BuiltinLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_NumSubExprs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumSubExprs(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ConvertVectorExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.ConvertVectorExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ConvertVectorExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ConvertVectorExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation BuiltinLoc 'get set' : 
    CppSharp.Parser.AST.Expr SrcExpr 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SrcExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_SrcExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_BuiltinLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_BuiltinLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ChooseExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.ChooseExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ChooseExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ChooseExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr ChosenSubExpr 'get set' : 
    Boolean IsConditionDependent 'get set' : 
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation BuiltinLoc 'get set' : 
    CppSharp.Parser.AST.Expr RHS 'get set' : 
    CppSharp.Parser.AST.Expr LHS 'get set' : 
    CppSharp.Parser.AST.Expr Cond 'get set' : 
    Boolean IsConditionTrue 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsConditionTrue(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConditionTrue(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Cond(): PrivateScope, Public, HideBySig, SpecialName
    set_Cond(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_LHS(): PrivateScope, Public, HideBySig, SpecialName
    set_LHS(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_RHS(): PrivateScope, Public, HideBySig, SpecialName
    set_RHS(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_BuiltinLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_BuiltinLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_IsConditionDependent(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConditionDependent(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ChosenSubExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_ChosenSubExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.GNUNullExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.GNUNullExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.GNUNullExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.GNUNullExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation TokenLocation 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_TokenLocation(): PrivateScope, Public, HideBySig, SpecialName
    set_TokenLocation(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.VAArgExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.VAArgExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VAArgExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VAArgExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation BuiltinLoc 'get set' : 
    Boolean IsMicrosoftABI 'get set' : 
    CppSharp.Parser.AST.Expr SubExpr 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SubExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_SubExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_IsMicrosoftABI(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMicrosoftABI(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BuiltinLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_BuiltinLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.InitListExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.InitListExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.InitListExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.InitListExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsSyntacticForm 'get set' : 
    CppSharp.Parser.AST.InitListExpr SemanticForm 'get set' : 
    Boolean IsSemanticForm 'get set' : 
    Boolean IsTransparent 'get set' : 
    Boolean IsStringLiteralInit 'get set' : 
    Boolean IsExplicit 'get set' : 
    Boolean HasArrayFiller 'get set' : 
    UInt32 NumInits 'get set' : 
    CppSharp.Parser.AST.InitListExpr SyntacticForm 'get set' : 
    CppSharp.Parser.SourceLocation RBraceLoc 'get set' : 
    CppSharp.Parser.SourceLocation LBraceLoc 'get set' : 
    CppSharp.Parser.AST.Expr ArrayFiller 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ArrayFiller(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrayFiller(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_LBraceLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LBraceLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RBraceLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RBraceLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_SyntacticForm(): PrivateScope, Public, HideBySig, SpecialName
    set_SyntacticForm(InitListExpr): PrivateScope, Public, HideBySig, SpecialName
    get_NumInits(): PrivateScope, Public, HideBySig, SpecialName
    set_NumInits(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_HasArrayFiller(): PrivateScope, Public, HideBySig, SpecialName
    set_HasArrayFiller(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsExplicit(): PrivateScope, Public, HideBySig, SpecialName
    set_IsExplicit(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsStringLiteralInit(): PrivateScope, Public, HideBySig, SpecialName
    set_IsStringLiteralInit(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTransparent(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTransparent(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsSemanticForm(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSemanticForm(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SemanticForm(): PrivateScope, Public, HideBySig, SpecialName
    set_SemanticForm(InitListExpr): PrivateScope, Public, HideBySig, SpecialName
    get_IsSyntacticForm(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSyntacticForm(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.DesignatedInitExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.DesignatedInitExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DesignatedInitExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DesignatedInitExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceRange DesignatorsSourceRange 'get set' : 
    UInt32 NumSubExprs 'get set' : 
    Boolean UsesGNUSyntax 'get set' : 
    UInt32 Size 'get set' : 
    CppSharp.Parser.AST.Expr Init 'get set' : 
    CppSharp.Parser.SourceLocation EqualOrColonLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_EqualOrColonLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_EqualOrColonLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Init(): PrivateScope, Public, HideBySig, SpecialName
    set_Init(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_UsesGNUSyntax(): PrivateScope, Public, HideBySig, SpecialName
    set_UsesGNUSyntax(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NumSubExprs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumSubExprs(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_DesignatorsSourceRange(): PrivateScope, Public, HideBySig, SpecialName
    set_DesignatorsSourceRange(SourceRange): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.DesignatedInitExpr+Designator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(Designator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Designator*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Designator*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.SourceRange SourceRange 'get set' : 
    UInt32 FirstExprIndex 'get set' : 
    CppSharp.Parser.SourceLocation EllipsisLoc 'get set' : 
    CppSharp.Parser.SourceLocation RBracketLoc 'get set' : 
    CppSharp.Parser.SourceLocation LBracketLoc 'get set' : 
    CppSharp.Parser.SourceLocation FieldLoc 'get set' : 
    CppSharp.Parser.SourceLocation DotLoc 'get set' : 
    Boolean IsArrayRangeDesignator 'get set' : 
    Boolean IsArrayDesignator 'get set' : 
    Boolean IsFieldDesignator 'get set' : 
    CppSharp.Parser.AST.Field Field 'get set' : 
    IntPtr __Instance 'get set' : 
    Designator* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Designator*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Field(): PrivateScope, Public, HideBySig, SpecialName
    set_Field(Field): PrivateScope, Public, HideBySig, SpecialName
    get_IsFieldDesignator(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFieldDesignator(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsArrayDesignator(): PrivateScope, Public, HideBySig, SpecialName
    set_IsArrayDesignator(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsArrayRangeDesignator(): PrivateScope, Public, HideBySig, SpecialName
    set_IsArrayRangeDesignator(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_DotLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_DotLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_FieldLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_LBracketLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LBracketLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RBracketLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RBracketLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_EllipsisLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_EllipsisLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_FirstExprIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_FirstExprIndex(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_SourceRange(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceRange(SourceRange): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.DesignatedInitExpr+FieldDesignator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(FieldDesignator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(FieldDesignator*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(FieldDesignator*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    IntPtr __Instance 'get set' : 
    FieldDesignator* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(FieldDesignator*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.DesignatedInitExpr+ArrayOrRangeDesignator: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(ArrayOrRangeDesignator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ArrayOrRangeDesignator*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ArrayOrRangeDesignator*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    IntPtr __Instance 'get set' : 
    ArrayOrRangeDesignator* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ArrayOrRangeDesignator*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.NoInitExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.NoInitExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.NoInitExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.NoInitExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.DesignatedInitUpdateExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.DesignatedInitUpdateExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DesignatedInitUpdateExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DesignatedInitUpdateExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.InitListExpr Updater 'get set' : 
    CppSharp.Parser.AST.Expr Base 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Base(): PrivateScope, Public, HideBySig, SpecialName
    set_Base(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Updater(): PrivateScope, Public, HideBySig, SpecialName
    set_Updater(InitListExpr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ArrayInitLoopExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.ArrayInitLoopExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ArrayInitLoopExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ArrayInitLoopExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr SubExpr 'get set' : 
    CppSharp.Parser.AST.OpaqueValueExpr CommonExpr 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_CommonExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_CommonExpr(OpaqueValueExpr): PrivateScope, Public, HideBySig, SpecialName
    get_SubExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_SubExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ArrayInitIndexExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.ArrayInitIndexExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ArrayInitIndexExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ArrayInitIndexExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.ImplicitValueInitExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.ImplicitValueInitExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ImplicitValueInitExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ImplicitValueInitExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.ParenListExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.ParenListExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ParenListExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ParenListExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation LParenLoc 'get set' : 
    UInt32 NumExprs 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_NumExprs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumExprs(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_LParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.GenericSelectionExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.GenericSelectionExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.GenericSelectionExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.GenericSelectionExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr ResultExpr 'get set' : 
    UInt32 ResultIndex 'get set' : 
    Boolean IsResultDependent 'get set' : 
    CppSharp.Parser.AST.Expr ControllingExpr 'get set' : 
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation DefaultLoc 'get set' : 
    CppSharp.Parser.SourceLocation GenericLoc 'get set' : 
    UInt32 NumAssocs 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_NumAssocs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumAssocs(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_GenericLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_GenericLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_ControllingExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_ControllingExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_IsResultDependent(): PrivateScope, Public, HideBySig, SpecialName
    set_IsResultDependent(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ResultIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_ResultIndex(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ResultExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_ResultExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ExtVectorElementExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.ExtVectorElementExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ExtVectorElementExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ExtVectorElementExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsArrow 'get set' : 
    Boolean ContainsDuplicateElements 'get set' : 
    UInt32 NumElements 'get set' : 
    CppSharp.Parser.SourceLocation AccessorLoc 'get set' : 
    CppSharp.Parser.AST.Expr Base 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Base(): PrivateScope, Public, HideBySig, SpecialName
    set_Base(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_AccessorLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_AccessorLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_NumElements(): PrivateScope, Public, HideBySig, SpecialName
    set_NumElements(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ContainsDuplicateElements(): PrivateScope, Public, HideBySig, SpecialName
    set_ContainsDuplicateElements(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsArrow(): PrivateScope, Public, HideBySig, SpecialName
    set_IsArrow(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.BlockExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.BlockExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BlockExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BlockExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Stmt Body 'get set' : 
    CppSharp.Parser.SourceLocation CaretLocation 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_CaretLocation(): PrivateScope, Public, HideBySig, SpecialName
    set_CaretLocation(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    set_Body(Stmt): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.AsTypeExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.AsTypeExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AsTypeExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AsTypeExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation BuiltinLoc 'get set' : 
    CppSharp.Parser.AST.Expr SrcExpr 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SrcExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_SrcExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_BuiltinLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_BuiltinLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.PseudoObjectExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.PseudoObjectExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PseudoObjectExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PseudoObjectExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 NumSemanticExprs 'get set' : 
    CppSharp.Parser.AST.Expr ResultExpr 'get set' : 
    UInt32 ResultExprIndex 'get set' : 
    CppSharp.Parser.AST.Expr SyntacticForm 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SyntacticForm(): PrivateScope, Public, HideBySig, SpecialName
    set_SyntacticForm(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_ResultExprIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_ResultExprIndex(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_ResultExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_ResultExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_NumSemanticExprs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumSemanticExprs(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.AtomicExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.AtomicExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AtomicExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AtomicExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation BuiltinLoc 'get set' : 
    Boolean IsOpenCL 'get set' : 
    Boolean IsCmpXChg 'get set' : 
    Boolean IsVolatile 'get set' : 
    UInt32 NumSubExprs 'get set' : 
    AtomicOp Op 'get set' : 
    CppSharp.Parser.AST.QualifiedType ValueType 'get set' : 
    CppSharp.Parser.AST.Expr Weak 'get set' : 
    CppSharp.Parser.AST.Expr Val2 'get set' : 
    CppSharp.Parser.AST.Expr OrderFail 'get set' : 
    CppSharp.Parser.AST.Expr Val1 'get set' : 
    CppSharp.Parser.AST.Expr Scope 'get set' : 
    CppSharp.Parser.AST.Expr Order 'get set' : 
    CppSharp.Parser.AST.Expr Ptr 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Ptr(): PrivateScope, Public, HideBySig, SpecialName
    set_Ptr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Order(): PrivateScope, Public, HideBySig, SpecialName
    set_Order(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Scope(): PrivateScope, Public, HideBySig, SpecialName
    set_Scope(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Val1(): PrivateScope, Public, HideBySig, SpecialName
    set_Val1(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_OrderFail(): PrivateScope, Public, HideBySig, SpecialName
    set_OrderFail(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Val2(): PrivateScope, Public, HideBySig, SpecialName
    set_Val2(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Weak(): PrivateScope, Public, HideBySig, SpecialName
    set_Weak(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_ValueType(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Op(): PrivateScope, Public, HideBySig, SpecialName
    set_Op(AtomicOp): PrivateScope, Public, HideBySig, SpecialName
    get_NumSubExprs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumSubExprs(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IsVolatile(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVolatile(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsCmpXChg(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCmpXChg(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsOpenCL(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOpenCL(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BuiltinLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_BuiltinLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.AtomicExpr+AtomicOp: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AtomicOp C11AtomicInit = 0 : Public, Static, Literal, HasDefault
    AtomicOp C11AtomicLoad = 1 : Public, Static, Literal, HasDefault
    AtomicOp C11AtomicStore = 2 : Public, Static, Literal, HasDefault
    AtomicOp C11AtomicExchange = 3 : Public, Static, Literal, HasDefault
    AtomicOp C11AtomicCompareExchangeStrong = 4 : Public, Static, Literal, HasDefault
    AtomicOp C11AtomicCompareExchangeWeak = 5 : Public, Static, Literal, HasDefault
    AtomicOp C11AtomicFetchAdd = 6 : Public, Static, Literal, HasDefault
    AtomicOp C11AtomicFetchSub = 7 : Public, Static, Literal, HasDefault
    AtomicOp C11AtomicFetchAnd = 8 : Public, Static, Literal, HasDefault
    AtomicOp C11AtomicFetchOr = 9 : Public, Static, Literal, HasDefault
    AtomicOp C11AtomicFetchXor = 10 : Public, Static, Literal, HasDefault
    AtomicOp AtomicLoad = 11 : Public, Static, Literal, HasDefault
    AtomicOp AtomicLoadN = 12 : Public, Static, Literal, HasDefault
    AtomicOp AtomicStore = 13 : Public, Static, Literal, HasDefault
    AtomicOp AtomicStoreN = 14 : Public, Static, Literal, HasDefault
    AtomicOp AtomicExchange = 15 : Public, Static, Literal, HasDefault
    AtomicOp AtomicExchangeN = 16 : Public, Static, Literal, HasDefault
    AtomicOp AtomicCompareExchange = 17 : Public, Static, Literal, HasDefault
    AtomicOp AtomicCompareExchangeN = 18 : Public, Static, Literal, HasDefault
    AtomicOp AtomicFetchAdd = 19 : Public, Static, Literal, HasDefault
    AtomicOp AtomicFetchSub = 20 : Public, Static, Literal, HasDefault
    AtomicOp AtomicFetchAnd = 21 : Public, Static, Literal, HasDefault
    AtomicOp AtomicFetchOr = 22 : Public, Static, Literal, HasDefault
    AtomicOp AtomicFetchXor = 23 : Public, Static, Literal, HasDefault
    AtomicOp AtomicFetchNand = 24 : Public, Static, Literal, HasDefault
    AtomicOp AtomicAddFetch = 25 : Public, Static, Literal, HasDefault
    AtomicOp AtomicSubFetch = 26 : Public, Static, Literal, HasDefault
    AtomicOp AtomicAndFetch = 27 : Public, Static, Literal, HasDefault
    AtomicOp AtomicOrFetch = 28 : Public, Static, Literal, HasDefault
    AtomicOp AtomicXorFetch = 29 : Public, Static, Literal, HasDefault
    AtomicOp AtomicNandFetch = 30 : Public, Static, Literal, HasDefault
    AtomicOp OpenclAtomicInit = 31 : Public, Static, Literal, HasDefault
    AtomicOp OpenclAtomicLoad = 32 : Public, Static, Literal, HasDefault
    AtomicOp OpenclAtomicStore = 33 : Public, Static, Literal, HasDefault
    AtomicOp OpenclAtomicExchange = 34 : Public, Static, Literal, HasDefault
    AtomicOp OpenclAtomicCompareExchangeStrong = 35 : Public, Static, Literal, HasDefault
    AtomicOp OpenclAtomicCompareExchangeWeak = 36 : Public, Static, Literal, HasDefault
    AtomicOp OpenclAtomicFetchAdd = 37 : Public, Static, Literal, HasDefault
    AtomicOp OpenclAtomicFetchSub = 38 : Public, Static, Literal, HasDefault
    AtomicOp OpenclAtomicFetchAnd = 39 : Public, Static, Literal, HasDefault
    AtomicOp OpenclAtomicFetchOr = 40 : Public, Static, Literal, HasDefault
    AtomicOp OpenclAtomicFetchXor = 41 : Public, Static, Literal, HasDefault
    AtomicOp OpenclAtomicFetchMin = 42 : Public, Static, Literal, HasDefault
    AtomicOp OpenclAtomicFetchMax = 43 : Public, Static, Literal, HasDefault
    AtomicOp AtomicFetchMin = 44 : Public, Static, Literal, HasDefault
    AtomicOp AtomicFetchMax = 45 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.TypoExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.TypoExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypoExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypoExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.CXXOperatorCallExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.CallExpr
    Void .ctor(CppSharp.Parser.AST.CXXOperatorCallExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXOperatorCallExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXOperatorCallExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsFPContractableWithinStatement 'get set' : 
    CppSharp.Parser.SourceLocation OperatorLoc 'get set' : 
    Boolean IsInfixBinaryOp 'get set' : 
    Boolean IsAssignmentOp 'get set' : 
    CppSharp.Parser.AST.OverloadedOperatorKind Operator 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Operator(): PrivateScope, Public, HideBySig, SpecialName
    set_Operator(OverloadedOperatorKind): PrivateScope, Public, HideBySig, SpecialName
    get_IsAssignmentOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAssignmentOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsInfixBinaryOp(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInfixBinaryOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_IsFPContractableWithinStatement(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFPContractableWithinStatement(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXMemberCallExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.CallExpr
    Void .ctor(CppSharp.Parser.AST.CXXMemberCallExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXMemberCallExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXMemberCallExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Method MethodDecl 'get set' : 
    CppSharp.Parser.AST.Expr ImplicitObjectArgument 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ImplicitObjectArgument(): PrivateScope, Public, HideBySig, SpecialName
    set_ImplicitObjectArgument(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_MethodDecl(): PrivateScope, Public, HideBySig, SpecialName
    set_MethodDecl(Method): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CUDAKernelCallExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.CallExpr
    Void .ctor(CppSharp.Parser.AST.CUDAKernelCallExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CUDAKernelCallExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CUDAKernelCallExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.CallExpr Config 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Config(): PrivateScope, Public, HideBySig, SpecialName
    set_Config(CallExpr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXNamedCastExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.ExplicitCastExpr
    Void .ctor(CppSharp.Parser.AST.CXXNamedCastExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.StmtClass): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXNamedCastExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXNamedCastExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceRange AngleBrackets 'get set' : 
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation OperatorLoc 'get set' : 
    System.String CastName 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_CastName(): PrivateScope, Public, HideBySig, SpecialName
    set_CastName(String): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_AngleBrackets(): PrivateScope, Public, HideBySig, SpecialName
    set_AngleBrackets(SourceRange): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(StmtClass): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXStaticCastExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.CXXNamedCastExpr
    Void .ctor(CppSharp.Parser.AST.CXXStaticCastExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXStaticCastExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXStaticCastExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.CXXDynamicCastExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.CXXNamedCastExpr
    Void .ctor(CppSharp.Parser.AST.CXXDynamicCastExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXDynamicCastExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXDynamicCastExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsAlwaysNull 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsAlwaysNull(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAlwaysNull(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXReinterpretCastExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.CXXNamedCastExpr
    Void .ctor(CppSharp.Parser.AST.CXXReinterpretCastExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXReinterpretCastExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXReinterpretCastExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.CXXConstCastExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.CXXNamedCastExpr
    Void .ctor(CppSharp.Parser.AST.CXXConstCastExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXConstCastExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXConstCastExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.UserDefinedLiteral: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.CallExpr
    Void .ctor(CppSharp.Parser.AST.UserDefinedLiteral): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UserDefinedLiteral*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UserDefinedLiteral*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation UDSuffixLoc 'get set' : 
    CppSharp.Parser.AST.Expr CookedLiteral 'get set' : 
    LiteralOperatorKind literalOperatorKind 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_literalOperatorKind(): PrivateScope, Public, HideBySig, SpecialName
    set_literalOperatorKind(LiteralOperatorKind): PrivateScope, Public, HideBySig, SpecialName
    get_CookedLiteral(): PrivateScope, Public, HideBySig, SpecialName
    set_CookedLiteral(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_UDSuffixLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_UDSuffixLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.UserDefinedLiteral+LiteralOperatorKind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    LiteralOperatorKind Raw = 0 : Public, Static, Literal, HasDefault
    LiteralOperatorKind Template = 1 : Public, Static, Literal, HasDefault
    LiteralOperatorKind Integer = 2 : Public, Static, Literal, HasDefault
    LiteralOperatorKind Floating = 3 : Public, Static, Literal, HasDefault
    LiteralOperatorKind String = 4 : Public, Static, Literal, HasDefault
    LiteralOperatorKind Character = 5 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.CXXBoolLiteralExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXBoolLiteralExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXBoolLiteralExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXBoolLiteralExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation Location 'get set' : 
    Boolean Value 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXNullPtrLiteralExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXNullPtrLiteralExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXNullPtrLiteralExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXNullPtrLiteralExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation Location 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXStdInitializerListExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXStdInitializerListExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXStdInitializerListExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXStdInitializerListExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr SubExpr 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SubExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_SubExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXTypeidExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXTypeidExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXTypeidExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXTypeidExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTypeOperand 'get set' : 
    Boolean IsPotentiallyEvaluated 'get set' : 
    CppSharp.Parser.AST.Expr ExprOperand 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ExprOperand(): PrivateScope, Public, HideBySig, SpecialName
    set_ExprOperand(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_IsPotentiallyEvaluated(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPotentiallyEvaluated(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTypeOperand(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTypeOperand(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.MSPropertyRefExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.MSPropertyRefExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MSPropertyRefExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MSPropertyRefExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation MemberLoc 'get set' : 
    Boolean IsArrow 'get set' : 
    CppSharp.Parser.AST.Expr BaseExpr 'get set' : 
    Boolean IsImplicitAccess 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsImplicitAccess(): PrivateScope, Public, HideBySig, SpecialName
    set_IsImplicitAccess(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BaseExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_IsArrow(): PrivateScope, Public, HideBySig, SpecialName
    set_IsArrow(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MemberLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_MemberLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.MSPropertySubscriptExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.MSPropertySubscriptExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MSPropertySubscriptExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MSPropertySubscriptExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr Idx 'get set' : 
    CppSharp.Parser.AST.Expr Base 'get set' : 
    CppSharp.Parser.SourceLocation RBracketLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_RBracketLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RBracketLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Base(): PrivateScope, Public, HideBySig, SpecialName
    set_Base(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Idx(): PrivateScope, Public, HideBySig, SpecialName
    set_Idx(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXUuidofExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXUuidofExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXUuidofExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXUuidofExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTypeOperand 'get set' : 
    System.String UuidStr 'get set' : 
    CppSharp.Parser.AST.Expr ExprOperand 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ExprOperand(): PrivateScope, Public, HideBySig, SpecialName
    set_ExprOperand(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_UuidStr(): PrivateScope, Public, HideBySig, SpecialName
    set_UuidStr(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsTypeOperand(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTypeOperand(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXThisExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXThisExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXThisExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXThisExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Implicit 'get set' : 
    CppSharp.Parser.SourceLocation Location 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    set_Implicit(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXThrowExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXThrowExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXThrowExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXThrowExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsThrownVariableInScope 'get set' : 
    CppSharp.Parser.SourceLocation ThrowLoc 'get set' : 
    CppSharp.Parser.AST.Expr SubExpr 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SubExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_SubExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_ThrowLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_ThrowLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_IsThrownVariableInScope(): PrivateScope, Public, HideBySig, SpecialName
    set_IsThrownVariableInScope(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXDefaultArgExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXDefaultArgExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXDefaultArgExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXDefaultArgExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation UsedLocation 'get set' : 
    CppSharp.Parser.AST.Expr Expr 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Expr(): PrivateScope, Public, HideBySig, SpecialName
    set_Expr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_UsedLocation(): PrivateScope, Public, HideBySig, SpecialName
    set_UsedLocation(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXDefaultInitExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXDefaultInitExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXDefaultInitExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXDefaultInitExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr Expr 'get set' : 
    CppSharp.Parser.AST.Field Field 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Field(): PrivateScope, Public, HideBySig, SpecialName
    set_Field(Field): PrivateScope, Public, HideBySig, SpecialName
    get_Expr(): PrivateScope, Public, HideBySig, SpecialName
    set_Expr(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXBindTemporaryExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXBindTemporaryExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXBindTemporaryExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXBindTemporaryExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr SubExpr 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_SubExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_SubExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXConstructExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXConstructExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.StmtClass): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXConstructExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXConstructExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 GetargumentsCount 'get ' : 
    UInt32 NumArgs 'get set' : 
    CppSharp.Parser.SourceRange ParenOrBraceRange 'get set' : 
    Boolean RequiresZeroInitialization 'get set' : 
    Boolean StdInitListInitialization 'get set' : 
    Boolean ListInitialization 'get set' : 
    Boolean HadMultipleCandidates 'get set' : 
    Boolean Elidable 'get set' : 
    CppSharp.Parser.SourceLocation Location 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Expr] Arguments 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Elidable(): PrivateScope, Public, HideBySig, SpecialName
    set_Elidable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HadMultipleCandidates(): PrivateScope, Public, HideBySig, SpecialName
    set_HadMultipleCandidates(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ListInitialization(): PrivateScope, Public, HideBySig, SpecialName
    set_ListInitialization(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_StdInitListInitialization(): PrivateScope, Public, HideBySig, SpecialName
    set_StdInitListInitialization(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_RequiresZeroInitialization(): PrivateScope, Public, HideBySig, SpecialName
    set_RequiresZeroInitialization(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ParenOrBraceRange(): PrivateScope, Public, HideBySig, SpecialName
    set_ParenOrBraceRange(SourceRange): PrivateScope, Public, HideBySig, SpecialName
    get_NumArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumArgs(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_GetargumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    Getarguments(UInt32): PrivateScope, Public, HideBySig
    Addarguments(Expr): PrivateScope, Public, HideBySig
    Cleararguments(): PrivateScope, Public, HideBySig
    op_Implicit(StmtClass): PrivateScope, Public, Static, HideBySig, SpecialName
Struct CppSharp.Parser.AST.CXXConstructExpr+ConstructionKind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ConstructionKind Complete = 0 : Public, Static, Literal, HasDefault
    ConstructionKind NonVirtualBase = 1 : Public, Static, Literal, HasDefault
    ConstructionKind VirtualBase = 2 : Public, Static, Literal, HasDefault
    ConstructionKind Delegating = 3 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.CXXInheritedCtorInitExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXInheritedCtorInitExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXInheritedCtorInitExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXInheritedCtorInitExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation Location 'get set' : 
    Boolean InheritedFromVBase 'get set' : 
    Boolean ConstructsVBase 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ConstructsVBase(): PrivateScope, Public, HideBySig, SpecialName
    set_ConstructsVBase(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_InheritedFromVBase(): PrivateScope, Public, HideBySig, SpecialName
    set_InheritedFromVBase(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXFunctionalCastExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.ExplicitCastExpr
    Void .ctor(CppSharp.Parser.AST.CXXFunctionalCastExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXFunctionalCastExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXFunctionalCastExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsListInitialization 'get set' : 
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation LParenLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_LParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_IsListInitialization(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListInitialization(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXTemporaryObjectExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.CXXConstructExpr
    Void .ctor(CppSharp.Parser.AST.CXXTemporaryObjectExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXTemporaryObjectExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXTemporaryObjectExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.LambdaExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.LambdaExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.LambdaExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.LambdaExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 GetcaptureInitsCount 'get ' : 
    Boolean HasExplicitResultType 'get set' : 
    Boolean HasExplicitParameters 'get set' : 
    Boolean IsMutable 'get set' : 
    CppSharp.Parser.AST.CompoundStmt Body 'get set' : 
    Boolean IsGenericLambda 'get set' : 
    CppSharp.Parser.AST.Method CallOperator 'get set' : 
    CppSharp.Parser.SourceRange IntroducerRange 'get set' : 
    UInt32 CaptureSize 'get set' : 
    CppSharp.Parser.SourceLocation CaptureDefaultLoc 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Expr] CaptureInits 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_CaptureInits(): PrivateScope, Public, HideBySig, SpecialName
    set_CaptureInits(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_CaptureDefaultLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_CaptureDefaultLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_CaptureSize(): PrivateScope, Public, HideBySig, SpecialName
    set_CaptureSize(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IntroducerRange(): PrivateScope, Public, HideBySig, SpecialName
    set_IntroducerRange(SourceRange): PrivateScope, Public, HideBySig, SpecialName
    get_CallOperator(): PrivateScope, Public, HideBySig, SpecialName
    set_CallOperator(Method): PrivateScope, Public, HideBySig, SpecialName
    get_IsGenericLambda(): PrivateScope, Public, HideBySig, SpecialName
    set_IsGenericLambda(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    set_Body(CompoundStmt): PrivateScope, Public, HideBySig, SpecialName
    get_IsMutable(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMutable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasExplicitParameters(): PrivateScope, Public, HideBySig, SpecialName
    set_HasExplicitParameters(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasExplicitResultType(): PrivateScope, Public, HideBySig, SpecialName
    set_HasExplicitResultType(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GetcaptureInitsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetcaptureInits(UInt32): PrivateScope, Public, HideBySig
    AddcaptureInits(Expr): PrivateScope, Public, HideBySig
    ClearcaptureInits(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.CXXScalarValueInitExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXScalarValueInitExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXScalarValueInitExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXScalarValueInitExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXNewExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXNewExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXNewExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXNewExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 GetplacementArgumentsCount 'get ' : 
    CppSharp.Parser.SourceRange DirectInitRange 'get set' : 
    CppSharp.Parser.AST.CXXConstructExpr ConstructExpr 'get set' : 
    CppSharp.Parser.AST.Expr Initializer 'get set' : 
    InitializationStyle initializationStyle 'get set' : 
    Boolean HasInitializer 'get set' : 
    Boolean IsGlobalNew 'get set' : 
    CppSharp.Parser.SourceRange TypeIdParens 'get set' : 
    Boolean IsParenTypeId 'get set' : 
    UInt32 NumPlacementArgs 'get set' : 
    CppSharp.Parser.AST.Expr ArraySize 'get set' : 
    Boolean IsArray 'get set' : 
    CppSharp.Parser.AST.QualifiedType AllocatedType 'get set' : 
    CppSharp.Parser.AST.Function OperatorDelete 'get set' : 
    CppSharp.Parser.AST.Function OperatorNew 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Expr] PlacementArguments 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_PlacementArguments(): PrivateScope, Public, HideBySig, SpecialName
    set_PlacementArguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorNew(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorNew(Function): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorDelete(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorDelete(Function): PrivateScope, Public, HideBySig, SpecialName
    get_AllocatedType(): PrivateScope, Public, HideBySig, SpecialName
    set_AllocatedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_IsArray(): PrivateScope, Public, HideBySig, SpecialName
    set_IsArray(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ArraySize(): PrivateScope, Public, HideBySig, SpecialName
    set_ArraySize(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_NumPlacementArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumPlacementArgs(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IsParenTypeId(): PrivateScope, Public, HideBySig, SpecialName
    set_IsParenTypeId(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_TypeIdParens(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeIdParens(SourceRange): PrivateScope, Public, HideBySig, SpecialName
    get_IsGlobalNew(): PrivateScope, Public, HideBySig, SpecialName
    set_IsGlobalNew(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasInitializer(): PrivateScope, Public, HideBySig, SpecialName
    set_HasInitializer(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_initializationStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_initializationStyle(InitializationStyle): PrivateScope, Public, HideBySig, SpecialName
    get_Initializer(): PrivateScope, Public, HideBySig, SpecialName
    set_Initializer(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_ConstructExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_ConstructExpr(CXXConstructExpr): PrivateScope, Public, HideBySig, SpecialName
    get_DirectInitRange(): PrivateScope, Public, HideBySig, SpecialName
    set_DirectInitRange(SourceRange): PrivateScope, Public, HideBySig, SpecialName
    get_GetplacementArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetplacementArguments(UInt32): PrivateScope, Public, HideBySig
    AddplacementArguments(Expr): PrivateScope, Public, HideBySig
    ClearplacementArguments(): PrivateScope, Public, HideBySig
Struct CppSharp.Parser.AST.CXXNewExpr+InitializationStyle: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    InitializationStyle NoInit = 0 : Public, Static, Literal, HasDefault
    InitializationStyle CallInit = 1 : Public, Static, Literal, HasDefault
    InitializationStyle ListInit = 2 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.CXXDeleteExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXDeleteExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXDeleteExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXDeleteExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType DestroyedType 'get set' : 
    CppSharp.Parser.AST.Expr Argument 'get set' : 
    CppSharp.Parser.AST.Function OperatorDelete 'get set' : 
    Boolean IsArrayFormAsWritten 'get set' : 
    Boolean IsArrayForm 'get set' : 
    Boolean IsGlobalDelete 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsGlobalDelete(): PrivateScope, Public, HideBySig, SpecialName
    set_IsGlobalDelete(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsArrayForm(): PrivateScope, Public, HideBySig, SpecialName
    set_IsArrayForm(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsArrayFormAsWritten(): PrivateScope, Public, HideBySig, SpecialName
    set_IsArrayFormAsWritten(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorDelete(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorDelete(Function): PrivateScope, Public, HideBySig, SpecialName
    get_Argument(): PrivateScope, Public, HideBySig, SpecialName
    set_Argument(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_DestroyedType(): PrivateScope, Public, HideBySig, SpecialName
    set_DestroyedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXPseudoDestructorExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXPseudoDestructorExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXPseudoDestructorExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXPseudoDestructorExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation DestroyedTypeLoc 'get set' : 
    CppSharp.Parser.AST.QualifiedType DestroyedType 'get set' : 
    CppSharp.Parser.SourceLocation TildeLoc 'get set' : 
    CppSharp.Parser.SourceLocation ColonColonLoc 'get set' : 
    CppSharp.Parser.SourceLocation OperatorLoc 'get set' : 
    Boolean IsArrow 'get set' : 
    Boolean HasQualifier 'get set' : 
    CppSharp.Parser.AST.Expr Base 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Base(): PrivateScope, Public, HideBySig, SpecialName
    set_Base(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_HasQualifier(): PrivateScope, Public, HideBySig, SpecialName
    set_HasQualifier(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsArrow(): PrivateScope, Public, HideBySig, SpecialName
    set_IsArrow(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_ColonColonLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_ColonColonLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_TildeLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_TildeLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_DestroyedType(): PrivateScope, Public, HideBySig, SpecialName
    set_DestroyedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_DestroyedTypeLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_DestroyedTypeLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TypeTraitExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.TypeTraitExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeTraitExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeTraitExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 NumArgs 'get set' : 
    Boolean Value 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NumArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumArgs(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ArrayTypeTraitExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.ArrayTypeTraitExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ArrayTypeTraitExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ArrayTypeTraitExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr DimensionExpression 'get set' : 
    UInt64 Value 'get set' : 
    CppSharp.Parser.AST.QualifiedType QueriedType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_QueriedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QueriedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(UInt64): PrivateScope, Public, HideBySig, SpecialName
    get_DimensionExpression(): PrivateScope, Public, HideBySig, SpecialName
    set_DimensionExpression(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ExpressionTraitExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.ExpressionTraitExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ExpressionTraitExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ExpressionTraitExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Value 'get set' : 
    CppSharp.Parser.AST.Expr QueriedExpression 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_QueriedExpression(): PrivateScope, Public, HideBySig, SpecialName
    set_QueriedExpression(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.OverloadExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.OverloadExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.StmtClass): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.OverloadExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.OverloadExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 NumTemplateArgs 'get set' : 
    Boolean HasExplicitTemplateArgs 'get set' : 
    Boolean HasTemplateKeyword 'get set' : 
    CppSharp.Parser.SourceLocation RAngleLoc 'get set' : 
    CppSharp.Parser.SourceLocation LAngleLoc 'get set' : 
    CppSharp.Parser.SourceLocation TemplateKeywordLoc 'get set' : 
    CppSharp.Parser.SourceLocation NameLoc 'get set' : 
    UInt32 NumDecls 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_NumDecls(): PrivateScope, Public, HideBySig, SpecialName
    set_NumDecls(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_NameLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_NameLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_TemplateKeywordLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_TemplateKeywordLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_LAngleLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LAngleLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RAngleLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RAngleLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_HasTemplateKeyword(): PrivateScope, Public, HideBySig, SpecialName
    set_HasTemplateKeyword(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasExplicitTemplateArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_HasExplicitTemplateArgs(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NumTemplateArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumTemplateArgs(UInt32): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(StmtClass): PrivateScope, Public, Static, HideBySig, SpecialName
Class CppSharp.Parser.AST.OverloadExpr+FindResult: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(FindResult): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(FindResult*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(FindResult*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    IntPtr __Instance 'get set' : 
    FindResult* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(FindResult*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.UnresolvedLookupExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.OverloadExpr
    Void .ctor(CppSharp.Parser.AST.UnresolvedLookupExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnresolvedLookupExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnresolvedLookupExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsOverloaded 'get set' : 
    Boolean RequiresADL 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_RequiresADL(): PrivateScope, Public, HideBySig, SpecialName
    set_RequiresADL(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsOverloaded(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOverloaded(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.DependentScopeDeclRefExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.DependentScopeDeclRefExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DependentScopeDeclRefExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DependentScopeDeclRefExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 NumTemplateArgs 'get set' : 
    Boolean HasExplicitTemplateArgs 'get set' : 
    Boolean HasTemplateKeyword 'get set' : 
    CppSharp.Parser.SourceLocation RAngleLoc 'get set' : 
    CppSharp.Parser.SourceLocation LAngleLoc 'get set' : 
    CppSharp.Parser.SourceLocation TemplateKeywordLoc 'get set' : 
    CppSharp.Parser.SourceLocation Location 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_TemplateKeywordLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_TemplateKeywordLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_LAngleLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LAngleLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RAngleLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RAngleLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_HasTemplateKeyword(): PrivateScope, Public, HideBySig, SpecialName
    set_HasTemplateKeyword(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasExplicitTemplateArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_HasExplicitTemplateArgs(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NumTemplateArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumTemplateArgs(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ExprWithCleanups: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.FullExpr
    Void .ctor(CppSharp.Parser.AST.ExprWithCleanups): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ExprWithCleanups*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ExprWithCleanups*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CleanupsHaveSideEffects 'get set' : 
    UInt32 NumObjects 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_NumObjects(): PrivateScope, Public, HideBySig, SpecialName
    set_NumObjects(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_CleanupsHaveSideEffects(): PrivateScope, Public, HideBySig, SpecialName
    set_CleanupsHaveSideEffects(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXUnresolvedConstructExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXUnresolvedConstructExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXUnresolvedConstructExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXUnresolvedConstructExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 GetargumentsCount 'get ' : 
    UInt32 ArgSize 'get set' : 
    Boolean IsListInitialization 'get set' : 
    CppSharp.Parser.AST.QualifiedType TypeAsWritten 'get set' : 
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation LParenLoc 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Expr] Arguments 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_LParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_TypeAsWritten(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeAsWritten(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_IsListInitialization(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListInitialization(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ArgSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ArgSize(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_GetargumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    Getarguments(UInt32): PrivateScope, Public, HideBySig
    Addarguments(Expr): PrivateScope, Public, HideBySig
    Cleararguments(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.CXXDependentScopeMemberExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXDependentScopeMemberExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXDependentScopeMemberExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXDependentScopeMemberExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 NumTemplateArgs 'get set' : 
    Boolean HasExplicitTemplateArgs 'get set' : 
    Boolean HasTemplateKeyword 'get set' : 
    CppSharp.Parser.SourceLocation RAngleLoc 'get set' : 
    CppSharp.Parser.SourceLocation LAngleLoc 'get set' : 
    CppSharp.Parser.SourceLocation TemplateKeywordLoc 'get set' : 
    CppSharp.Parser.SourceLocation MemberLoc 'get set' : 
    CppSharp.Parser.AST.Declaration FirstQualifierFoundInScope 'get set' : 
    CppSharp.Parser.SourceLocation OperatorLoc 'get set' : 
    Boolean IsArrow 'get set' : 
    CppSharp.Parser.AST.QualifiedType BaseType 'get set' : 
    CppSharp.Parser.AST.Expr Base 'get set' : 
    Boolean IsImplicitAccess 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsImplicitAccess(): PrivateScope, Public, HideBySig, SpecialName
    set_IsImplicitAccess(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Base(): PrivateScope, Public, HideBySig, SpecialName
    set_Base(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_BaseType(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_IsArrow(): PrivateScope, Public, HideBySig, SpecialName
    set_IsArrow(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_FirstQualifierFoundInScope(): PrivateScope, Public, HideBySig, SpecialName
    set_FirstQualifierFoundInScope(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_MemberLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_MemberLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_TemplateKeywordLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_TemplateKeywordLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_LAngleLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_LAngleLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RAngleLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RAngleLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_HasTemplateKeyword(): PrivateScope, Public, HideBySig, SpecialName
    set_HasTemplateKeyword(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasExplicitTemplateArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_HasExplicitTemplateArgs(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NumTemplateArgs(): PrivateScope, Public, HideBySig, SpecialName
    set_NumTemplateArgs(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.UnresolvedMemberExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.OverloadExpr
    Void .ctor(CppSharp.Parser.AST.UnresolvedMemberExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnresolvedMemberExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnresolvedMemberExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation MemberLoc 'get set' : 
    CppSharp.Parser.SourceLocation OperatorLoc 'get set' : 
    Boolean IsArrow 'get set' : 
    Boolean HasUnresolvedUsing 'get set' : 
    CppSharp.Parser.AST.QualifiedType BaseType 'get set' : 
    CppSharp.Parser.AST.Expr Base 'get set' : 
    Boolean IsImplicitAccess 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsImplicitAccess(): PrivateScope, Public, HideBySig, SpecialName
    set_IsImplicitAccess(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Base(): PrivateScope, Public, HideBySig, SpecialName
    set_Base(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_BaseType(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_HasUnresolvedUsing(): PrivateScope, Public, HideBySig, SpecialName
    set_HasUnresolvedUsing(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsArrow(): PrivateScope, Public, HideBySig, SpecialName
    set_IsArrow(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_MemberLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_MemberLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CXXNoexceptExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXNoexceptExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXNoexceptExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXNoexceptExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Value 'get set' : 
    CppSharp.Parser.AST.Expr Operand 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Operand(): PrivateScope, Public, HideBySig, SpecialName
    set_Operand(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.PackExpansionExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.PackExpansionExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PackExpansionExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PackExpansionExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation EllipsisLoc 'get set' : 
    CppSharp.Parser.AST.Expr Pattern 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Pattern(): PrivateScope, Public, HideBySig, SpecialName
    set_Pattern(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_EllipsisLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_EllipsisLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.SizeOfPackExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.SizeOfPackExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SizeOfPackExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SizeOfPackExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsPartiallySubstituted 'get set' : 
    UInt32 PackLength 'get set' : 
    CppSharp.Parser.AST.Declaration Pack 'get set' : 
    CppSharp.Parser.SourceLocation RParenLoc 'get set' : 
    CppSharp.Parser.SourceLocation PackLoc 'get set' : 
    CppSharp.Parser.SourceLocation OperatorLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_OperatorLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_PackLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_PackLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_RParenLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_RParenLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Pack(): PrivateScope, Public, HideBySig, SpecialName
    set_Pack(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_PackLength(): PrivateScope, Public, HideBySig, SpecialName
    set_PackLength(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IsPartiallySubstituted(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPartiallySubstituted(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.SubstNonTypeTemplateParmExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.SubstNonTypeTemplateParmExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SubstNonTypeTemplateParmExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SubstNonTypeTemplateParmExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr Replacement 'get set' : 
    CppSharp.Parser.SourceLocation NameLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_NameLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_NameLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Replacement(): PrivateScope, Public, HideBySig, SpecialName
    set_Replacement(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.SubstNonTypeTemplateParmPackExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.SubstNonTypeTemplateParmPackExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SubstNonTypeTemplateParmPackExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.SubstNonTypeTemplateParmPackExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.TemplateArgument ArgumentPack 'get set' : 
    CppSharp.Parser.SourceLocation ParameterPackLocation 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ParameterPackLocation(): PrivateScope, Public, HideBySig, SpecialName
    set_ParameterPackLocation(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentPack(): PrivateScope, Public, HideBySig, SpecialName
    set_ArgumentPack(TemplateArgument): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.FunctionParmPackExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.FunctionParmPackExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FunctionParmPackExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FunctionParmPackExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 NumExpansions 'get set' : 
    CppSharp.Parser.SourceLocation ParameterPackLocation 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ParameterPackLocation(): PrivateScope, Public, HideBySig, SpecialName
    set_ParameterPackLocation(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_NumExpansions(): PrivateScope, Public, HideBySig, SpecialName
    set_NumExpansions(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.MaterializeTemporaryExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.MaterializeTemporaryExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MaterializeTemporaryExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MaterializeTemporaryExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsBoundToLvalueReference 'get set' : 
    UInt32 ManglingNumber 'get set' : 
    CppSharp.Parser.AST.Expr TemporaryExpr 'get set' : 
    CppSharp.Parser.AST.Stmt Temporary 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Temporary(): PrivateScope, Public, HideBySig, SpecialName
    set_Temporary(Stmt): PrivateScope, Public, HideBySig, SpecialName
    get_TemporaryExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_TemporaryExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_ManglingNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_ManglingNumber(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IsBoundToLvalueReference(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBoundToLvalueReference(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.MaterializeTemporaryExpr+ExtraState: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(ExtraState): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ExtraState*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ExtraState*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    IntPtr __Instance 'get set' : 
    ExtraState* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ExtraState*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.CXXFoldExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CXXFoldExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXFoldExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CXXFoldExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.BinaryOperatorKind Operator 'get set' : 
    CppSharp.Parser.SourceLocation EllipsisLoc 'get set' : 
    CppSharp.Parser.AST.Expr Init 'get set' : 
    CppSharp.Parser.AST.Expr Pattern 'get set' : 
    Boolean IsLeftFold 'get set' : 
    Boolean IsRightFold 'get set' : 
    CppSharp.Parser.AST.Expr RHS 'get set' : 
    CppSharp.Parser.AST.Expr LHS 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_LHS(): PrivateScope, Public, HideBySig, SpecialName
    set_LHS(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_RHS(): PrivateScope, Public, HideBySig, SpecialName
    set_RHS(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_IsRightFold(): PrivateScope, Public, HideBySig, SpecialName
    set_IsRightFold(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsLeftFold(): PrivateScope, Public, HideBySig, SpecialName
    set_IsLeftFold(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Pattern(): PrivateScope, Public, HideBySig, SpecialName
    set_Pattern(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_Init(): PrivateScope, Public, HideBySig, SpecialName
    set_Init(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_EllipsisLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_EllipsisLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Operator(): PrivateScope, Public, HideBySig, SpecialName
    set_Operator(BinaryOperatorKind): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CoroutineSuspendExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.CoroutineSuspendExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.StmtClass): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CoroutineSuspendExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CoroutineSuspendExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr ResumeExpr 'get set' : 
    CppSharp.Parser.AST.Expr SuspendExpr 'get set' : 
    CppSharp.Parser.AST.Expr ReadyExpr 'get set' : 
    CppSharp.Parser.AST.OpaqueValueExpr OpaqueValue 'get set' : 
    CppSharp.Parser.AST.Expr CommonExpr 'get set' : 
    CppSharp.Parser.SourceLocation KeywordLoc 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_KeywordLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_KeywordLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
    get_CommonExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_CommonExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_OpaqueValue(): PrivateScope, Public, HideBySig, SpecialName
    set_OpaqueValue(OpaqueValueExpr): PrivateScope, Public, HideBySig, SpecialName
    get_ReadyExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadyExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_SuspendExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_SuspendExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_ResumeExpr(): PrivateScope, Public, HideBySig, SpecialName
    set_ResumeExpr(Expr): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(StmtClass): PrivateScope, Public, Static, HideBySig, SpecialName
Struct CppSharp.Parser.AST.CoroutineSuspendExpr+SubExpr: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SubExpr Common = 0 : Public, Static, Literal, HasDefault
    SubExpr Ready = 1 : Public, Static, Literal, HasDefault
    SubExpr Suspend = 2 : Public, Static, Literal, HasDefault
    SubExpr Resume = 3 : Public, Static, Literal, HasDefault
    SubExpr Count = 4 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.CoawaitExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.CoroutineSuspendExpr
    Void .ctor(CppSharp.Parser.AST.CoawaitExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CoawaitExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CoawaitExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr Operand 'get set' : 
    Boolean IsImplicit 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsImplicit(): PrivateScope, Public, HideBySig, SpecialName
    set_IsImplicit(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Operand(): PrivateScope, Public, HideBySig, SpecialName
    set_Operand(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.DependentCoawaitExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Expr
    Void .ctor(CppSharp.Parser.AST.DependentCoawaitExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DependentCoawaitExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DependentCoawaitExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.SourceLocation KeywordLoc 'get set' : 
    CppSharp.Parser.AST.UnresolvedLookupExpr OperatorCoawaitLookup 'get set' : 
    CppSharp.Parser.AST.Expr Operand 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Operand(): PrivateScope, Public, HideBySig, SpecialName
    set_Operand(Expr): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorCoawaitLookup(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorCoawaitLookup(UnresolvedLookupExpr): PrivateScope, Public, HideBySig, SpecialName
    get_KeywordLoc(): PrivateScope, Public, HideBySig, SpecialName
    set_KeywordLoc(SourceLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.CoyieldExpr: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.CoroutineSuspendExpr
    Void .ctor(CppSharp.Parser.AST.CoyieldExpr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CoyieldExpr*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.CoyieldExpr*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Expr Operand 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Operand(): PrivateScope, Public, HideBySig, SpecialName
    set_Operand(Expr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Type: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.TypeKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Type*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Type*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    Boolean IsDependent 'get set' : 
    CppSharp.Parser.AST.TypeKind Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.Type* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Type*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(TypeKind): PrivateScope, Public, HideBySig, SpecialName
    get_IsDependent(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDependent(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(TypeKind): PrivateScope, Public, Static, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.TypeQualifiers: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.Parser.AST.TypeQualifiers): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeQualifiers*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeQualifiers*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    Boolean IsRestrict 'get set' : 
    Boolean IsVolatile 'get set' : 
    Boolean IsConst 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.TypeQualifiers* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(TypeQualifiers*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_IsConst(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConst(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsVolatile(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVolatile(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsRestrict(): PrivateScope, Public, HideBySig, SpecialName
    set_IsRestrict(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.QualifiedType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.QualifiedType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.QualifiedType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.QualifiedType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    CppSharp.Parser.AST.TypeQualifiers Qualifiers 'get set' : 
    CppSharp.Parser.AST.Type Type 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.QualifiedType* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(QualifiedType*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Qualifiers(): PrivateScope, Public, HideBySig, SpecialName
    set_Qualifiers(TypeQualifiers): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class CppSharp.Parser.AST.TagType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.TagType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TagType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TagType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Declaration Declaration 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(Declaration): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ArrayType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.ArrayType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ArrayType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ArrayType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ElementSize 'get set' IsLong : 
    Int32 Size 'get set' IsLong : 
    ArraySize SizeType 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_SizeType(): PrivateScope, Public, HideBySig, SpecialName
    set_SizeType(ArraySize): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32 IsLong): PrivateScope, Public, HideBySig, SpecialName
    get_ElementSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ElementSize(Int32 IsLong): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.ArrayType+ArraySize: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ArraySize Constant = 0 : Public, Static, Literal, HasDefault
    ArraySize Variable = 1 : Public, Static, Literal, HasDefault
    ArraySize Dependent = 2 : Public, Static, Literal, HasDefault
    ArraySize Incomplete = 3 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.FunctionType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.FunctionType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FunctionType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FunctionType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ParametersCount 'get ' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Parameter] Parameters 'get set' : 
    CppSharp.Parser.AST.ExceptionSpecType ExceptionSpecType 'get set' : 
    CppSharp.Parser.AST.CallingConvention CallingConvention 'get set' : 
    CppSharp.Parser.AST.QualifiedType ReturnType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ReturnType(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_CallingConvention(): PrivateScope, Public, HideBySig, SpecialName
    set_CallingConvention(CallingConvention): PrivateScope, Public, HideBySig, SpecialName
    get_ExceptionSpecType(): PrivateScope, Public, HideBySig, SpecialName
    set_ExceptionSpecType(ExceptionSpecType): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameters(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_ParametersCount(): PrivateScope, Public, HideBySig, SpecialName
    GetParameters(UInt32): PrivateScope, Public, HideBySig
    AddParameters(Parameter): PrivateScope, Public, HideBySig
    ClearParameters(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.PointerType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.PointerType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PointerType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PointerType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TypeModifier Modifier 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedPointee 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_QualifiedPointee(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedPointee(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Modifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Modifier(TypeModifier): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.PointerType+TypeModifier: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TypeModifier Value = 0 : Public, Static, Literal, HasDefault
    TypeModifier Pointer = 1 : Public, Static, Literal, HasDefault
    TypeModifier LVReference = 2 : Public, Static, Literal, HasDefault
    TypeModifier RVReference = 3 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.MemberPointerType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.MemberPointerType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MemberPointerType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MemberPointerType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType Pointee 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Pointee(): PrivateScope, Public, HideBySig, SpecialName
    set_Pointee(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TypedefType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.TypedefType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypedefType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypedefType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.TypedefNameDecl Declaration 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(TypedefNameDecl): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.AttributedType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.AttributedType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AttributedType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AttributedType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType Equivalent 'get set' : 
    CppSharp.Parser.AST.QualifiedType Modified 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Modified(): PrivateScope, Public, HideBySig, SpecialName
    set_Modified(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Equivalent(): PrivateScope, Public, HideBySig, SpecialName
    set_Equivalent(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.DecayedType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.DecayedType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DecayedType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DecayedType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType Pointee 'get set' : 
    CppSharp.Parser.AST.QualifiedType Original 'get set' : 
    CppSharp.Parser.AST.QualifiedType Decayed 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Decayed(): PrivateScope, Public, HideBySig, SpecialName
    set_Decayed(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Original(): PrivateScope, Public, HideBySig, SpecialName
    set_Original(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Pointee(): PrivateScope, Public, HideBySig, SpecialName
    set_Pointee(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TemplateArgument: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(CppSharp.Parser.AST.TemplateArgument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateArgument*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateArgument*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
    System.IDisposable
  Properties:
    Int32 Integral 'get set' IsLong : 
    CppSharp.Parser.AST.Declaration Declaration 'get set' : 
    CppSharp.Parser.AST.QualifiedType Type 'get set' : 
    ArgumentKind Kind 'get set' : 
    IntPtr __Instance 'get set' : 
    CppSharp.CppParser.AST.TemplateArgument* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(TemplateArgument*): PrivateScope, Public, HideBySig, SpecialName
    get___Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set___Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(ArgumentKind): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_Integral(): PrivateScope, Public, HideBySig, SpecialName
    set_Integral(Int32 IsLong): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct CppSharp.Parser.AST.TemplateArgument+ArgumentKind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ArgumentKind Type = 0 : Public, Static, Literal, HasDefault
    ArgumentKind Declaration = 1 : Public, Static, Literal, HasDefault
    ArgumentKind NullPtr = 2 : Public, Static, Literal, HasDefault
    ArgumentKind Integral = 3 : Public, Static, Literal, HasDefault
    ArgumentKind Template = 4 : Public, Static, Literal, HasDefault
    ArgumentKind TemplateExpansion = 5 : Public, Static, Literal, HasDefault
    ArgumentKind Expression = 6 : Public, Static, Literal, HasDefault
    ArgumentKind Pack = 7 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.TemplateSpecializationType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.TemplateSpecializationType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateSpecializationType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateSpecializationType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    CppSharp.Parser.AST.QualifiedType Desugared 'get set' : 
    CppSharp.Parser.AST.Template Template 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.TemplateArgument] Arguments 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Template(): PrivateScope, Public, HideBySig, SpecialName
    set_Template(Template): PrivateScope, Public, HideBySig, SpecialName
    get_Desugared(): PrivateScope, Public, HideBySig, SpecialName
    set_Desugared(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(TemplateArgument): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.DependentTemplateSpecializationType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.DependentTemplateSpecializationType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DependentTemplateSpecializationType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DependentTemplateSpecializationType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ArgumentsCount 'get ' : 
    CppSharp.Parser.AST.QualifiedType Desugared 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.TemplateArgument] Arguments 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Desugared(): PrivateScope, Public, HideBySig, SpecialName
    set_Desugared(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_ArgumentsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetArguments(UInt32): PrivateScope, Public, HideBySig
    AddArguments(TemplateArgument): PrivateScope, Public, HideBySig
    ClearArguments(): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.TemplateParameterType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.TemplateParameterType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateParameterType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateParameterType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsParameterPack 'get set' : 
    UInt32 Index 'get set' : 
    UInt32 Depth 'get set' : 
    CppSharp.Parser.AST.TypeTemplateParameter Parameter 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Parameter(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameter(TypeTemplateParameter): PrivateScope, Public, HideBySig, SpecialName
    get_Depth(): PrivateScope, Public, HideBySig, SpecialName
    set_Depth(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    set_Index(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_IsParameterPack(): PrivateScope, Public, HideBySig, SpecialName
    set_IsParameterPack(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TemplateParameterSubstitutionType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.TemplateParameterSubstitutionType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateParameterSubstitutionType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateParameterSubstitutionType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.TemplateParameterType ReplacedParameter 'get set' : 
    CppSharp.Parser.AST.QualifiedType Replacement 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Replacement(): PrivateScope, Public, HideBySig, SpecialName
    set_Replacement(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_ReplacedParameter(): PrivateScope, Public, HideBySig, SpecialName
    set_ReplacedParameter(TemplateParameterType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.InjectedClassNameType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.InjectedClassNameType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.InjectedClassNameType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.InjectedClassNameType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Class Class 'get set' : 
    CppSharp.Parser.AST.QualifiedType InjectedSpecializationType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_InjectedSpecializationType(): PrivateScope, Public, HideBySig, SpecialName
    set_InjectedSpecializationType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Class(): PrivateScope, Public, HideBySig, SpecialName
    set_Class(Class): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.DependentNameType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.DependentNameType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DependentNameType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DependentNameType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Identifier 'get set' : 
    CppSharp.Parser.AST.QualifiedType Qualifier 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Qualifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Qualifier(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Identifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Identifier(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.PackExpansionType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.PackExpansionType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PackExpansionType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PackExpansionType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
Class CppSharp.Parser.AST.UnaryTransformType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.UnaryTransformType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnaryTransformType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnaryTransformType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType BaseType 'get set' : 
    CppSharp.Parser.AST.QualifiedType Desugared 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Desugared(): PrivateScope, Public, HideBySig, SpecialName
    set_Desugared(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_BaseType(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.UnresolvedUsingType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.UnresolvedUsingType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnresolvedUsingType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.UnresolvedUsingType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.UnresolvedUsingTypename Declaration 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(UnresolvedUsingTypename): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.VectorType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.VectorType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VectorType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VectorType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 NumElements 'get set' : 
    CppSharp.Parser.AST.QualifiedType ElementType 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ElementType(): PrivateScope, Public, HideBySig, SpecialName
    set_ElementType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_NumElements(): PrivateScope, Public, HideBySig, SpecialName
    set_NumElements(UInt32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.BuiltinType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(CppSharp.Parser.AST.BuiltinType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BuiltinType*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BuiltinType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.PrimitiveType Type 'get set' : 
  Methods:
    __CreateInstance(IntPtr): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(PrimitiveType): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.CallingConvention: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CallingConvention Default = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention C = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention StdCall = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention ThisCall = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention FastCall = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention Unknown = 5 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.StmtClass: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.StmtClass NoStmt = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass GCCAsmStmt = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass MSAsmStmt = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass AttributedStmt = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass BreakStmt = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXCatchStmt = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXForRangeStmt = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXTryStmt = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CapturedStmt = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CompoundStmt = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ContinueStmt = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CoreturnStmt = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CoroutineBodyStmt = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass DeclStmt = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass DoStmt = 14 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass BinaryConditionalOperator = 15 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ConditionalOperator = 16 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass AddrLabelExpr = 17 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ArrayInitIndexExpr = 18 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ArrayInitLoopExpr = 19 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ArraySubscriptExpr = 20 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ArrayTypeTraitExpr = 21 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass AsTypeExpr = 22 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass AtomicExpr = 23 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass BinaryOperator = 24 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CompoundAssignOperator = 25 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass BlockExpr = 26 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXBindTemporaryExpr = 27 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXBoolLiteralExpr = 28 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXConstructExpr = 29 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXTemporaryObjectExpr = 30 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXDefaultArgExpr = 31 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXDefaultInitExpr = 32 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXDeleteExpr = 33 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXDependentScopeMemberExpr = 34 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXFoldExpr = 35 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXInheritedCtorInitExpr = 36 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXNewExpr = 37 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXNoexceptExpr = 38 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXNullPtrLiteralExpr = 39 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXPseudoDestructorExpr = 40 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXScalarValueInitExpr = 41 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXStdInitializerListExpr = 42 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXThisExpr = 43 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXThrowExpr = 44 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXTypeidExpr = 45 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXUnresolvedConstructExpr = 46 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXUuidofExpr = 47 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CallExpr = 48 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CUDAKernelCallExpr = 49 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXMemberCallExpr = 50 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXOperatorCallExpr = 51 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass UserDefinedLiteral = 52 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CStyleCastExpr = 53 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXFunctionalCastExpr = 54 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXConstCastExpr = 55 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXDynamicCastExpr = 56 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXReinterpretCastExpr = 57 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CXXStaticCastExpr = 58 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ImplicitCastExpr = 60 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CharacterLiteral = 61 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ChooseExpr = 62 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CompoundLiteralExpr = 63 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ConvertVectorExpr = 64 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CoawaitExpr = 65 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CoyieldExpr = 66 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass DeclRefExpr = 67 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass DependentCoawaitExpr = 68 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass DependentScopeDeclRefExpr = 69 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass DesignatedInitExpr = 70 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass DesignatedInitUpdateExpr = 71 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ExpressionTraitExpr = 72 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ExtVectorElementExpr = 73 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass FixedPointLiteral = 74 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass FloatingLiteral = 75 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ConstantExpr = 76 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ExprWithCleanups = 77 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass FunctionParmPackExpr = 78 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass GNUNullExpr = 79 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass GenericSelectionExpr = 80 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ImaginaryLiteral = 81 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ImplicitValueInitExpr = 82 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass InitListExpr = 83 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass IntegerLiteral = 84 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass LambdaExpr = 85 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass MSPropertyRefExpr = 86 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass MSPropertySubscriptExpr = 87 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass MaterializeTemporaryExpr = 88 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass MemberExpr = 89 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass NoInitExpr = 90 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass OffsetOfExpr = 107 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass OpaqueValueExpr = 108 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass UnresolvedLookupExpr = 109 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass UnresolvedMemberExpr = 110 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass PackExpansionExpr = 111 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ParenExpr = 112 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ParenListExpr = 113 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass PredefinedExpr = 114 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass PseudoObjectExpr = 115 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ShuffleVectorExpr = 116 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass SizeOfPackExpr = 117 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass StmtExpr = 118 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass StringLiteral = 119 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass SubstNonTypeTemplateParmExpr = 120 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass SubstNonTypeTemplateParmPackExpr = 121 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass TypeTraitExpr = 122 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass TypoExpr = 123 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass UnaryExprOrTypeTraitExpr = 124 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass UnaryOperator = 125 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass VAArgExpr = 126 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ForStmt = 127 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass GotoStmt = 128 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass IfStmt = 129 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass IndirectGotoStmt = 130 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass LabelStmt = 131 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass MSDependentExistsStmt = 132 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass NullStmt = 133 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass ReturnStmt = 188 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass SEHExceptStmt = 189 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass SEHFinallyStmt = 190 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass SEHLeaveStmt = 191 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass SEHTryStmt = 192 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass CaseStmt = 193 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass DefaultStmt = 194 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass SwitchStmt = 195 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.StmtClass WhileStmt = 196 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.CastKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CastKind Dependent = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind BitCast = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind LValueBitCast = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind LValueToRValue = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind NoOp = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind BaseToDerived = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind DerivedToBase = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind UncheckedDerivedToBase = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind Dynamic = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind ToUnion = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind ArrayToPointerDecay = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind FunctionToPointerDecay = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind NullToPointer = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind NullToMemberPointer = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind BaseToDerivedMemberPointer = 14 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind DerivedToBaseMemberPointer = 15 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind MemberPointerToBoolean = 16 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind ReinterpretMemberPointer = 17 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind UserDefinedConversion = 18 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind ConstructorConversion = 19 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind IntegralToPointer = 20 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind PointerToIntegral = 21 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind PointerToBoolean = 22 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind ToVoid = 23 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind VectorSplat = 24 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind IntegralCast = 25 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind IntegralToBoolean = 26 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind IntegralToFloating = 27 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind FixedPointCast = 28 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind FixedPointToBoolean = 29 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind FloatingToIntegral = 30 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind FloatingToBoolean = 31 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind BooleanToSignedIntegral = 32 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind FloatingCast = 33 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind CPointerToObjCPointerCast = 34 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind BlockPointerToObjCPointerCast = 35 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind AnyPointerToBlockPointerCast = 36 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind ObjCObjectLValueCast = 37 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind FloatingRealToComplex = 38 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind FloatingComplexToReal = 39 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind FloatingComplexToBoolean = 40 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind FloatingComplexCast = 41 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind FloatingComplexToIntegralComplex = 42 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind IntegralRealToComplex = 43 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind IntegralComplexToReal = 44 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind IntegralComplexToBoolean = 45 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind IntegralComplexCast = 46 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind IntegralComplexToFloatingComplex = 47 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind ARCProduceObject = 48 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind ARCConsumeObject = 49 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind ARCReclaimReturnedObject = 50 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind ARCExtendBlockObject = 51 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind AtomicToNonAtomic = 52 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind NonAtomicToAtomic = 53 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind CopyAndAutoreleaseBlockObject = 54 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind BuiltinFnToFnPtr = 55 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind ZeroToOCLOpaqueType = 56 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind AddressSpaceConversion = 57 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CastKind IntToOCLSampler = 58 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.BinaryOperatorKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.BinaryOperatorKind PtrMemD = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind PtrMemI = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind Mul = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind Div = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind Rem = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind Add = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind Sub = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind Shl = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind Shr = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind Cmp = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind LT = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind GT = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind LE = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind GE = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind EQ = 14 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind NE = 15 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind And = 16 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind Xor = 17 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind Or = 18 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind LAnd = 19 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind LOr = 20 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind Assign = 21 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind MulAssign = 22 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind DivAssign = 23 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind RemAssign = 24 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind AddAssign = 25 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind SubAssign = 26 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind ShlAssign = 27 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind ShrAssign = 28 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind AndAssign = 29 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind XorAssign = 30 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind OrAssign = 31 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.BinaryOperatorKind Comma = 32 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.UnaryOperatorKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.UnaryOperatorKind PostInc = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryOperatorKind PostDec = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryOperatorKind PreInc = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryOperatorKind PreDec = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryOperatorKind AddrOf = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryOperatorKind Deref = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryOperatorKind Plus = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryOperatorKind Minus = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryOperatorKind Not = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryOperatorKind LNot = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryOperatorKind Real = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryOperatorKind Imag = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryOperatorKind Extension = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryOperatorKind Coawait = 13 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.ObjCBridgeCastKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.ObjCBridgeCastKind Bridge = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ObjCBridgeCastKind BridgeTransfer = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ObjCBridgeCastKind BridgeRetained = 2 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.OverloadedOperatorKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.OverloadedOperatorKind None = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind New = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Delete = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind ArrayNew = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind ArrayDelete = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Plus = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Minus = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Star = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Slash = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Percent = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Caret = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Amp = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Pipe = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Tilde = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Exclaim = 14 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Equal = 15 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Less = 16 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Greater = 17 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind PlusEqual = 18 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind MinusEqual = 19 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind StarEqual = 20 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind SlashEqual = 21 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind PercentEqual = 22 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind CaretEqual = 23 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind AmpEqual = 24 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind PipeEqual = 25 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind LessLess = 26 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind GreaterGreater = 27 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind LessLessEqual = 28 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind GreaterGreaterEqual = 29 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind EqualEqual = 30 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind ExclaimEqual = 31 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind LessEqual = 32 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind GreaterEqual = 33 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Spaceship = 34 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind AmpAmp = 35 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind PipePipe = 36 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind PlusPlus = 37 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind MinusMinus = 38 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Comma = 39 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind ArrowStar = 40 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Arrow = 41 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Call = 42 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Subscript = 43 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Conditional = 44 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.OverloadedOperatorKind Coawait = 45 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.UnaryExprOrTypeTrait: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.UnaryExprOrTypeTrait SizeOf = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryExprOrTypeTrait AlignOf = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryExprOrTypeTrait VecStep = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryExprOrTypeTrait OpenMPRequiredSimdAlign = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.UnaryExprOrTypeTrait PreferredAlignOf = 4 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.TypeKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.TypeKind Tag = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Array = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Function = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Pointer = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind MemberPointer = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Typedef = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Attributed = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Decayed = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind TemplateSpecialization = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind DependentTemplateSpecialization = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind TemplateParameter = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind TemplateParameterSubstitution = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind InjectedClassName = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind DependentName = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind PackExpansion = 14 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Builtin = 15 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind UnaryTransform = 16 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind UnresolvedUsing = 17 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.TypeKind Vector = 18 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.PrimitiveType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.PrimitiveType Null = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Void = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Bool = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType WideChar = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Char = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType SChar = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType UChar = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Char16 = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Char32 = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Short = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType UShort = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Int = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType UInt = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Long = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType ULong = 14 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType LongLong = 15 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType ULongLong = 16 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Int128 = 17 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType UInt128 = 18 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Half = 19 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Float = 20 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Double = 21 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType LongDouble = 22 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Float128 = 23 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType IntPtr = 24 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.ExceptionSpecType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.ExceptionSpecType None = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType DynamicNone = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType Dynamic = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType MSAny = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType BasicNoexcept = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType DependentNoexcept = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType NoexceptFalse = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType NoexceptTrue = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType Unevaluated = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType Uninstantiated = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.ExceptionSpecType Unparsed = 10 : Public, Static, Literal, HasDefault
